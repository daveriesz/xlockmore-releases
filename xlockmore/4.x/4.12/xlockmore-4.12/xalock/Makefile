# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.89 94/08/12 00:45:51 gildea Exp $

# -----------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $XConsortium: Imake.tmpl,v 1.219 94/05/13 15:58:31 matt Exp $
# $SunSoft: @(#)Imake.tmpl	1.1 01/13/97 16:16:22 $
#

# **************************************************************************
# NOTE:
#
# If the user does not define DESTDIR and/or BINDIR in the local Imakefile,
# 'make install' will install the resultant binaries in /usr/openwin/bin.
# This usually fails because of lack of write permission in that directory
# for non-root users.
#
# The reason is that the default definition of ProjectRoot is /usr/openwin.
# This value determines all other definitions, e.g. the binary, library and
# manual page directories, etc.  The destination directory, DESTDIR, is not
# defined and BINDIR is defined as $(ProjectRoot)/bin in Project.tmpl.
#
# Care must be taken when changing ProjectRoot.  It affects the inclusion
# path of 'imake' in finding the *.cf, *.def, *.tmpl and *.rules files,
# which are in /usr/openwin/lib/X11/config/, and the default inclusion path
# of X11 header files and libraries. Therefore, if ProjectRoot is changed
# not only these configuration files need to be copied to a proper location,
# defined by IRULESRC, so 'make Makefile' can work properly, the header file
# inclusion path, /usr/openwin/include, and the library search path,
# /usr/openwin/lib, also need to be defined properly either in the local
# Imakefile or one of the configuration files to avoid compilation errors
# for programs that use X11 header files or libraries.
#
# Please refer to Project.tmpl, Imake.tmpl, site.def, etc. in
# /usr/openwin/lib/X11/config/ for details.
# **************************************************************************

.SUFFIXES: .i

# $XConsortium: Imake.cf,v 1.12 94/03/29 15:42:08 gildea Exp $
# $SunSoft: @(#)Imake.cf	1.1 01/13/97 16:16:21 $

# -----------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample,v 1.11 94/06/03 19:50:12 matt Exp $
# site:  $SunSoft: @(#)site.def	1.1 01/13/97 16:16:27$

# -----------------------------------------------------------------------
# platform-specific configuration parameters - edit sun.cf to change

# platform:  $XConsortium: sun.cf,v 1.133 94/07/08 12:23:12 gildea Exp $
# platform:  $SunSoft: @(#)sun.cf	1.1 01/13/97 16:16:27 $

# operating system:  SunOS 5.6

# SUNSOFT SUNSOFT_LOADABLE

# $XConsortium: svr4.cf,v 1.6 94/04/08 18:56:33 rws Exp $
# $SunSoft: @(#)svr4.cf	1.1 01/13/97 16:16:29 $

# $XConsortium: sv4Lib.rules,v 1.14 94/04/09 12:00:10 rws Exp $
# $SunSoft: @(#)sv4Lib.rules	1.1 01/13/97 16:16:28 $

# SUNSOFT SUNSOFT_LOADABLE

# -----------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample,v 1.11 94/06/03 19:50:12 matt Exp $
# site:  $SunSoft: @(#)site.def	1.1 01/13/97 16:16:27$

# -----------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.193 94/04/10 17:39:55 rws Exp $
# rules:  $SunSoft: @(#)Imake.rules	1.1 01/13/97 16:16:21 $

# SUNSOFT SUNSOFT_LOADABLE

          PATHSEP = /
            SHELL = /bin/sh

              TOP = .
      CURRENT_DIR = ./xalock

            IMAKE = imake
           DEPEND = makedepend
        MKDIRHIER = mkdirhier
        CONFIGSRC = $(TOP)/config
         IMAKESRC = $(CONFIGSRC)/imake
        DEPENDSRC = $(CONFIGSRC)/makedepend
           IXXSRC = $(UNSUPPORTEDSRC)/programs/ixx
              IXX = ixx
         IXXFLAGS = -s BaseObject -m TypeObj -r RequestObj -p Xf
      IXXINCLUDES = -i '<X11/Fresco/enter-scope.h>'

          INCROOT = /usr/openwin/include
        USRLIBDIR = /usr/openwin/lib
         SHLIBDIR = /usr/openwin/lib
       LINTLIBDIR = $(USRLIBDIR)
          MANPATH = /usr/openwin/share/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)1
        LIBMANDIR = $(MANSOURCEPATH)3
       FILEMANDIR = $(MANSOURCEPATH)$(FILEMANSUFFIX)

               AR = /usr/ccs/bin/ar cq
  BOOTSTRAPCFLAGS = -DSVR4
               CC = cc
               AS = /usr/ccs/bin/as

         COMPRESS = compress
              CPP = /usr/ccs/lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = cc -E $(STD_CPP_DEFINES)
          INSTALL = /usr/ucb/install
     INSTALLFLAGS = -c
               LD = /usr/ccs/bin/ld
              LEX = /usr/ccs/bin/lex
           LEXLIB = -ll
             YACC = /usr/ccs/bin/yacc
           CCYACC = /usr/ccs/bin/yacc
             LINT = lint
      LINTLIBFLAG = -o
         LINTOPTS = -b -h -Xc
               LN = ln -s
             MAKE = /usr/ccs/bin/make
               MV = mv
               CP = cp

               RM = rm -f
        MANSUFFIX = 1
     LIBMANSUFFIX = 3
    FILEMANSUFFIX = 4
            TROFF = psroff
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn

            DVIPS = dvips
            LATEX = latex

     STD_INCLUDES =
  STD_CPP_DEFINES = -Dsun -Dsparc -DSVR4 -DSYSV
      STD_DEFINES = -Dsun -Dsparc -DSVR4 -DSYSV
 EXTRA_LOAD_FLAGS =
  EXTRA_LDOPTIONS =
  EXTRA_LIBRARIES = -lsocket -lnsl
             TAGS = ctags

    SHAREDCODEDEF =
         SHLIBDEF =

     SHLIBLDFLAGS = -G -z text -M mapfile

         PICFLAGS = -fpic

      CXXPICFLAGS = -K PIC

    PROTO_DEFINES =

     INSTPGMFLAGS =

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0644
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -g sys -m 2755

      PROJECTROOT = /usr/openwin

     TOP_INCLUDES = -I$(INCROOT)

      CDEBUGFLAGS = -O
        CCOPTIONS =

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(THREADS_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(THREADS_CFLAGS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES) $(DEPEND_DEFINES)
         LDPRELIB = -L$(USRLIBDIR)
        LDPOSTLIB =
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)  $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)
     CXXLDOPTIONS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_CXXLDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)

           LDLIBS = $(LDPOSTLIB) $(THREADS_LIBS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

       CCENVSETUP = LD_RUN_PATH=$(USRLIBDIR)
           CCLINK = $(CCENVSETUP) $(CC)

      CXXENVSETUP = LD_RUN_PATH=$(USRLIBDIR)
          CXXLINK = $(CXXENVSETUP) $(CXX)

     LDSTRIPFLAGS = -x
   LDCOMBINEFLAGS = -r
      DEPENDFLAGS =

        MACROFILE = sun.cf
           RM_CMD = $(RM)

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Project.tmpl \
			$(IRULESRC)/site.def $(IRULESRC)/$(MACROFILE) \
			 $(EXTRA_ICONFIGFILES)

# -----------------------------------------------------------------------
# X Window System Build Parameters and Rules
# $XConsortium: Project.tmpl,v 1.242 94/04/13 14:58:40 rws Exp $
# $SunSoft: @(#)Project.tmpl	1.3 04/21/97 16:46:25 $

# SUNSOFT SUNSOFT_LOADABLE

# -----------------------------------------------------------------------
# X Window System make variables; these need to be coordinated with rules

           BINDIR = /usr/openwin/bin
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
      BUILDLIBDIR = $(TOP)/usrlib
      BUILDLIBTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)/X11

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           TWMDIR = $(LIBDIR)/twm
           NLSDIR = $(LIBDIR)/nls
       XLOCALEDIR = $(PROJECTROOT)/lib/locale
        PEXAPIDIR = $(LIBDIR)/PEX
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

              RGB = rgb
            FONTC = bdftopcf
        MKFONTDIR = mkfontdir

       DOCUTILSRC = $(TOP)/doc/util
       XDOCMACROS = $(DOCUTILSRC)/macros.t
       XIDXMACROS = $(DOCUTILSRC)/indexmacros.t
       PROGRAMSRC = $(TOP)/programs
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/programs/Xserver
       CONTRIBSRC = $(TOP)/../contrib
   UNSUPPORTEDSRC = $(TOP)/unsupported
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/programs/rgb
      BDFTOPCFSRC = $(PROGRAMSRC)/bdftopcf
     MKFONTDIRSRC = $(PROGRAMSRC)/mkfontdir
    FONTSERVERSRC = $(PROGRAMSRC)/xfs
       FONTINCSRC = $(TOP)/include/fonts
        EXTINCSRC = $(TOP)/include/extensions
     TRANSCOMMSRC = $(LIBSRC)/xtrans
   TRANS_INCLUDES = -I$(TRANSCOMMSRC)

# $XConsortium: sunLib.tmpl,v 1.37 95/05/23 14:31:40 matt Exp $
# $SunSoft: @(#)sunLib.tmpl	1.2 02/06/97 16:06:36 $

# $XConsortium: sv4Lib.tmpl,v 1.19 93/12/03 10:48:36 kaleb Exp $
# $SunSoft: @(#)sv4Lib.tmpl	1.1 01/13/97 16:16:29 $

XMULIBONLY = -lXmu -lm
XMULIB = -lXmu -lm

       SERVERLIB = /usr/openwin/server/lib

	SERVERMODULES = /usr/openwin/server/modules

	SERVERETC = /usr/openwin/server/etc

SHLIBLDFLAGS = -G -z text -M mapfile
PICFLAGS = -fpic
MAPFILE = mapfile

          XLIBSRC = $(LIBSRC)/X11

SOXLIBREV = 4
DEPXONLYLIB =
XONLYLIB =  -lX11

LINTXONLY = $(LINTLIBDIR)/llib-lX11.ln

         XLIBONLY = $(XONLYLIB)

      XEXTLIBSRC = $(LIBSRC)/Xext

SOXEXTREV = 0
DEPEXTENSIONLIB =
EXTENSIONLIB =  -lXext

LINTEXTENSION = $(LINTLIBDIR)/llib-lXext.ln

LINTEXTENSIONLIB = $(LINTEXTENSION)
          DEPXLIB = $(DEPEXTENSIONLIB) $(DEPXONLYLIB)
             XLIB = $(EXTENSIONLIB) $(XONLYLIB)
         LINTXLIB = $(LINTXONLYLIB)

         XAUTHSRC = $(LIBSRC)/Xau

DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
XAUTHLIB =  -lXau

LINTXAUTH = $(LINTLIBDIR)/llib-lXau.ln

      XDMCPLIBSRC = $(LIBSRC)/Xdmcp

DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
XDMCPLIB =  -lXdmcp

LINTXDMCP = $(LINTLIBDIR)/llib-lXdmcp.ln

           XMUSRC = $(LIBSRC)/Xmu

SOXMUREV = 4
DEPXMULIB =
XMULIB =  -lXmu

LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln

XMULIB =  -lXmu -lm

          XCONFIGSRC = $(LIBSRC)/Xconfig

SOXCONFIGREV = 0
DEPXCONFIGLIB =
XCONFIGLIB =  -lXconfig

LINTXCONFIG = $(LINTLIBDIR)/llib-lXconfig.ln

          DGASRC = $(LIBSRC)/dga

SODGAREV = 1
DEPDGASRCLIB =
DGASRCLIB =  -ldga

LINTDGASRC = $(LINTLIBDIR)/llib-ldga.ln

          MISRC = $(SERVERSRC)/mi

SOMIREV = 1
DEPMILIB =
MILIB =  -lmi

LINTMI = $(LINTLIBDIR)/llib-lmi.ln

          MFBSRC = $(SERVERSRC)/mfb

SOMFBREV = 1
DEPMFBLIB =
MFBLIB =  -lmfb

LINTMFB = $(LINTLIBDIR)/llib-lmfb.ln

          CFBSRC = $(SERVERSRC)/cfb

SOCFBREV = 1
DEPCFBLIB =
CFBLIB =  -lcfb

LINTCFB = $(LINTLIBDIR)/llib-lcfb.ln

       OLDXLIBSRC = $(LIBSRC)/oldX

SOOLDXREV = 6
DEPOLDXLIB =
OLDXLIB =  -loldX

LINTOLDX = $(LINTLIBDIR)/llib-loldX.ln

       TOOLKITSRC = $(LIBSRC)/Xt

SOXTREV = 4
DEPXTOOLONLYLIB =
XTOOLONLYLIB =  -lXt

LINTXTOOLONLY = $(LINTLIBDIR)/llib-lXt.ln

      DEPXTOOLLIB = $(DEPXTOOLONLYLIB) $(DEPSMLIB) $(DEPICELIB)
         XTOOLLIB = $(XTOOLONLYLIB) $(SMLIB) $(ICELIB)
     LINTXTOOLLIB = $(LINTXTOOLONLYLIB)

       AWIDGETSRC = $(LIBSRC)/Xaw

SOXAWREV = 5
DEPXAWLIB =
XAWLIB =  -lXaw

LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln

       XTFSRC = $(TOP)/workInProgress/Xtf

SOXTFREV = 0.7
DEPXTFLIB =
XTFLIB =  -lXtf

LINTXTF = $(LINTLIBDIR)/llib-lXtf.ln

       FRESCOSRC = $(TOP)/workInProgress/Fresco

SOFRESCOREV = 0.7
DEPFRESCOLIB =
FRESCOLIB =  -lFresco

LINTFRESCO = $(LINTLIBDIR)/llib-lFresco.ln

         XILIBSRC = $(LIBSRC)/Xi

SOXINPUTREV = 5
DEPXILIB =
XILIB =  -lXi

LINTXI = $(LINTLIBDIR)/llib-lXi.ln

      XTESTLIBSRC = $(LIBSRC)/Xtst

SOXTESTREV = 1
DEPXTESTLIB =
XTESTLIB =  -lXtst

LINTXTEST = $(LINTLIBDIR)/llib-lXtst.ln

        PEXLIBSRC = $(LIBSRC)/PEX5

SOPEXREV = 6
DEPPEXLIB =
PEXLIB =  -lPEX5

LINTPEX = $(LINTLIBDIR)/llib-lPEX5.ln

SODPSREV = 5
SOSERVERDPSREV = 5

        DPSLIBSRC = $(LIBSRC)/DPS

SODPSREV = 5
DEPDPSLIB =
DPSLIB =  -lDPS

LINTDPS = $(LINTLIBDIR)/llib-lDPS.ln

        XIELIBSRC = $(LIBSRC)/XIE

SOXIEREV = 6
DEPXIELIB =
XIELIB =  -lXIE

LINTXIE = $(LINTLIBDIR)/llib-lXIE.ln

      PHIGSLIBSRC = $(LIBSRC)/PHIGS

DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
PHIGSLIB =  -lphigs

LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln

DEPXBSDLIB = $(USRLIBDIR)/libXbsd.a
XBSDLIB =  -lXbsd

LINTXBSD = $(LINTLIBDIR)/llib-lXbsd.ln

           ICESRC = $(LIBSRC)/ICE

SOICEREV = 6
DEPICELIB =
ICELIB =  -lICE

LINTICE = $(LINTLIBDIR)/llib-lICE.ln

            SMSRC = $(LIBSRC)/SM

SOSMREV = 6
DEPSMLIB =
SMLIB =  -lSM

LINTSM = $(LINTLIBDIR)/llib-lSM.ln

         FSLIBSRC = $(LIBSRC)/FS

SOFSREV = 5
DEPFSLIB =
FSLIB =  -lFS

LINTFS = $(LINTLIBDIR)/llib-lFS.ln

         FONTLIBSRC = $(LIBSRC)/font

DEPFONTLIB = $(USRLIBDIR)/libfont.a
FONTLIB =  -lfont

LINTFONT = $(LINTLIBDIR)/llib-lfont.ln

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

        CONFIGDIR = $(LIBDIR)/config

# -----------------------------------------------------------------------
# start of Imakefile

# @(#)Sub Imakefile	xlockmore
#

# !!!WARNING!!! Known security hole with MesaGL < 3.0 if setuid root
# Define these now or down further below, see below for explaination.

#  #define XawLibrary

#  #define DPMSLibrary
#  #define RplayLibrary
#  #define NasLibrary
#  #define Modules
#  #define Check

N =
O = .o
#  O = .obj
C=.c
#  C = .cc
S=$(N) $(N)
#  S = ,

# please define
# C as the C source code extension
# O as the object extension
# S as the separator for object code

#  CC = cc
#  CC = acc
#  CC = CC
#  CC = gcc -Wall
#  CC = g++ -Wall

LN_S = $(LN)

#   *** BEGIN XPM CONFIG SECTION ***

# Only the image.c and bat.c modes use this.
# If your system has libXpm, remove the 'XCOMM  ' from the next line.
#  #define

XPMDEF = -DUSE_XPM
# Use the following if your xpm.h file is not in an X11 directory
#  XPMDEF = -DUSE_XPMINC

# If you get an error "Cannot find xpm.h" while compiling, set
# XPMINC to the directory X11/xpm.h is in.  Below is a guess.
XPMINC = -I/usr/local/include
# SGI's ViewKit (use with -DUSE_XPMINC)
#  XPMINC = -I/usr/include/Vk
XPMINC = -I/usr/remote/include

# If you get an error "Cannot find libXpm" while linking, set XPMLIBPATH
# to the directory libXpm.* is in.  Below is a guess.
XPMLIB = -L/usr/remote/lib -lXpm

#   *** END XPM CONFIG SECTION ***

#   *** BEGIN XM CONFIG SECTION ***

# Only options.c and xmlock.c uses Motif.
# If your system has libXm, remove the 'XCOMM  ' from the next line.
#  #define

# If its not with your X11 stuff you should set the following
#  MOTIFHOME = /usr/local
#  MOTIFHOME = /usr/dt

# If you get an error "Cannot find Xm/PanedW.h" while compiling, set
# XMINC to the directory Xm/PanedW.h is in.  Below is a guess.
#  XMINC = -I$(MOTIFHOME)/include

# If you get an error "Cannot find libXm" while linking, set XMLIBPATH
# to the directory libXm.* is in.  Below is a guess.
#  XMLIB = -L$(MOTIFHOME)/lib -lXm
XMLIB = -lXm

# Debugging with editres
#  EDITRESDEF = -DUSE_XMU
#  EDITRESLIB = -lXmu

#   *** END XM CONFIG SECTION ***

#   *** BEGIN XAW CONFIG SECTION ***

# Only options.c and xalock.c uses Athena.
# If your system has libsx, libXaw, and libXmu,
# remove the 'XCOMM  ' from the next line.
#  #define XawLibrary

#   *** END XAW CONFIG SECTION ***

#   *** BEGIN MESAGL AND OPENGL CONFIG SECTION ***

# escher, gears, morph3d, pipes, superquadrics, sproingies modes use this.
# If your system has libMesaGL & widgets,
# remove the 'XCOMM  ' from the next line.
#  #define

GLDEF = -DUSE_GL

# If you get an error "Cannot find GL/gl.h" while compiling, set
# GLINC to the directory GL/gl.h is in.
GLINC = -I/usr/local/include

# If you get an error "Cannot find libMesaGL" while linking, set GLLIBPATH
# to the directory libMesaGL.* is in.  Below is a guess.
# !!!WARNING!!! Known security hole with MesaGL < 3.0 if setuid root
# GLLIB = -L/usr/local/lib -lMesaGL -lMesaGLU

# On SGI
#  GLLIB = -lGL -lGLU -lgl
# On other OpenGL
GLLIB = -lGL -lGLU
# On Sun with OGL1.1
GLDEF += -DSUN_OGL_NO_VERTEX_MACROS
# 3Dfx card
#  GLDEF += -DFX
# Threads
#  GLLIB += -lpthread

#   *** END MESAGL AND OPENGL CONFIG SECTION ***

#   *** BEGIN CDE DT CONFIG SECTION ***

# COMMON DESKTOP ENVIRONMENT
# if your system has libDtSvc, remove the 'XCOMM  ' from the next line
#  #define

DTSAVERDEF = -DUSE_DTSAVER
DTSAVERINC = -I/usr/dt/include
DTSAVERLIB = -L/usr/dt/lib -lDtSvc

#   *** END CDE DT CONFIG SECTION ***

#   *** BEGIN DPMS CONFIG SECTION ***

# DISPLAY POWER MANAGEMENT SIGNALING
# if your system has libXdpms, remove the 'XCOMM  ' from the next line
#  #define DPMSLibrary

#   *** END DPMS CONFIG SECTION ***

#   *** BEGIN SOUND CONFIG SECTION ***

# Only xlock.c and resource.c use this
# if your system has these sound libraries, remove the 'XCOMM  '
#  #define RplayLibrary
#  #define NasLibrary

# system play (optional software)
# SUNOS 4.1.3
#  DEF_PLAY = "/usr/demo/SOUND/play /usr/local/share/sounds/xlock/"
# IRIX 5.3
#  DEF_PLAY = "/usr/sbin/sfplay /usr/local/share/sounds/xlock/"
# Digital Unix with Multimedia Services installed:
#  DEF_PLAY = "/usr/bin/mme/decsound -play /usr/local/share/sounds/xlock/"
# LINUX and others (see config directory)
#  DEF_PLAY = "/usr/local/bin/play.sh /usr/local/share/sounds/xlock/"
# Uncomment line below if you have one of the above
#  SOUNDDEF = -DDEF_PLAY=\"$(DEF_PLAY)\"

#      *** END SOUND CONFIG SECTION ***

#      *** BEGIN RNG CONFIG SECTION ***

# Uncomment to use your system's Random Number Generator
# They usually come in 3 types

# Uncomment to use high-precision (but expensive) RNG
#  SRANDDEF = -DSRAND=srand48
#  LRANDDEF = -DLRAND=lrand48

#  SRANDDEF = -DSRAND=srandom
#  LRANDDEF = -DLRAND=random

# Least desirable RNG
#  SRANDDEF = -DSRAND=srand
#  LRANDDEF = -DLRAND=rand

# Normally use the above with (default)
#  MAXRANDDEF = -DMAXRAND=2147483648.0
# Use the following if using srand/rand and NOT AIXV3
#  MAXRANDDEF = -DMAXRAND=32767.0
RANDDEF = $(SRANDDEF) $(LRANDDEF) $(MAXRANDDEF)

#      *** END RNG CONFIG SECTION ***

#    *** BEGIN MODULES CONFIG SECTION **

# This is a HIGHLY experimental section.
# To use modules, you must have an ELF setup installed, and
# libdl.  This was originally written for Linux.
# /usr/include/dlfcn.h is not present on all Linux machines.
# Also tried to get this running on # Solaris-2.6 with gcc and gmake.
# Do not know if other Unixes support this kind of dynamic loading.
# Un-commenting Modules will compile xlock so that all of the modes
# are in separate modules which are loaded at runtime.  This means
# you can add new modes simply by putting them in your modules
# directory.
#  #define Modules

#    *** END MODULES CONFIG SECTION ***

#      *** BEGIN DEBUG CHECK SECTION ***

# #define Check

#      *** END DEBUG CHECK SECTION ***

# KERBEROS Ver. 4
#  PASSWDDEF = -DHAVE_KRB4
#  PASSWDINC = -I/usr/athena/include
#  PASSWDLIB = -L/usr/athena/lib -lkrb -ldes -lresolv
#
# KERBEROS Ver. 5
#  PASSWDDEF = -DHAVE_KRB5
#  PASSWDINC = -I/opt/krb5/include
#  PASSWDLIB = -L/opt/krb5/lib -lkrb5 -lcrypto -lcom_err

# DCE authentication (tested only on HP's)
#  PASSWDDEF = -DDCE_PASSWD
#  PASSWDINC = -I/usr/include/reentrant
#  PASSWDLIB = -ldce -lc_r

# PAM (tested only on Linux)
#  PASSWDDEF = -DUSE_PAM
#  PASSWDLIB = -lpam -ldl

SYSTEMDEF = -DSOLARIS2

# imake is usually not set up right here.
# Assume shadowing... usually more correct.
#  #if HasShadowPasswd
#  PASSWDDEF = -DHAVE_SHADOW
#  #endif
PASSWDDEF = -DHAVE_SHADOW
#  SLEEPDEF = -DHAVE_NAONOSLEEP

# Problems finding libXext.so.0 when sticky bit is set
EXTRA_LDOPTIONS = -R/usr/lib:/usr/openwin/lib:/usr/dt/lib:/usr/local/lib

PIXMAPTYPE = sol

BITMAPTYPE = sun

XLOCKINC = -I$(top_srcdir) -I. -I$(UTILSDIR)

# -DUSE_VROOT              Allows xlock to run in root window (some
#                          window managers have problems)
# -DALWAYS_ALLOW_ROOT      Users can not turn off allowroot
# -DUSE_SYSLOG             Paranoid administrator option (a check is also
#                          done to see if you have it)
# -DUSE_MULTIPLE_USER      Multiple users ... security?
# -DUSE_MULTIPLE_ROOT      Multiple root users ... security?
# -DUSE_WINDOW_VISIBILITY  Allow a window to be placed over xlock
# -DUSE_OLD_EVENT_LOOP     Some machines may still need this (fd_set
#                          errors may be a sign)
# -DUSE_VMSUTILS           This patches up old __VMS_VER < 70000000
# -DUSE_DPMS               DPMS stuff
#
# For personal use you may want to consider:
# -DUSE_XLOCKRC            paranoid admin or unknown shadow passwd alg
#
# For labs you may want to consider:
# -DUSE_AUTO_LOGOUT=240     Enable auto-logout and set deadline (minutes)
# -DDEF_AUTO_LOGOUT=\"120\" Set default auto-logout deadline (minutes)
# -DUSE_BUTTON_LOGOUT=10    Enable logout button and set appear time (min)
# -DDEF_BUTTON_LOGOUT=\"5\" Set default logout button (minutes)
# -DUSE_BOMB                Enable automatic logout mode (does not come up
#                           in random mode)
# -DUSE_UNSTABLE            Enable unstable bubble3d GL mode
# -DCLOSEDOWN_LOGOUT        Use with USE_AUTO_LOGOUT, USE_BUTTON_LOGOUT,
#                           USE_BOMB if using xdm
# -DSESSION_LOGOUT          Alternate of above
# -DSTAFF_FILE=\"/etc/xlock.staff\"  File of staff who are exempt
# -DSTAFF_NETGROUP=\"/etc/xlock.netgroup\"  Netgroup that is exempt

# May have to combine in one long line if "+=" does not work
OPTDEF = -DUSE_VROOT -DALWAYS_ALLOW_ROOT -DUSE_BOMB
#  OPTDEF += -DUSE_UNSTABLE
#  OPTDEF += -DUSE_SYSLOG -DSYSLOG_FACILITY=LOG_AUTH
#  OPTDEF += -DSYSLOG_WARNING=LOG_WARNING
#  OPTDEF += -DSYSLOG_NOTICE=LOG_NOTICE -DSYSLOG_INFO=LOG_INFO
#  OPTDEF += -DUSE_MULTIPLE_USER
#  OPTDEF += -DUSE_MULTIPLE_ROOT
#  OPTDEF += -DUSE_OLD_EVENT_LOOP
#  OPTDEF += -DUSE_XLOCKRC
#  OPTDEF += -DUSE_AUTO_LOGOUT=240
#  OPTDEF += -DDEF_AUTO_LOGOUT=\"120\"
#  OPTDEF += -DUSE_BUTTON_LOGOUT=10
#  OPTDEF += -DDEF_BUTTON_LOGOUT=\"5\"
#  OPTDEF += -DCLOSEDOWN_LOGOUT
#  OPTDEF += -DSESSION_LOGOUT
#  OPTDEF += -DSTAFF_FILE=\"/etc/xlock.staff\"
#  OPTDEF += -DSTAFF_NETGROUP=\"/etc/xlock.netgroup\"

DEFINES = -DDEF_FILESEARCHPATH=\"$(LIBDIR)/%T/%N%S\" \
$(SYSTEMDEF) $(EDITRESDEF) $(SLEEPDEF) $(OPTDEF) $(RANDDEF) $(MODULEDEF) \
$(PASSWDDEF) $(XMINC) $(XAWINC) $(XPMDEF) $(GLDEF) $(DTSAVERDEF) $(DPMSDEF) \
$(SOUNDDEF) $(PASSWDINC) $(XPMINC) $(GLINC) $(DTSAVERINC) $(DPMSINC) \
$(SOUNDINC) $(XLOCKINC)

DEPLIBS = $(DEPXLIB)
LOCAL_LIBRARIES = $(MODULELIB) $(XLIB) \
$(XPMLIB) $(GLLIB) $(DTSAVERLIB) $(DPMSLIB) $(SOUNDLIB)
MLIBS = $(XPMLIB) $(XMLIB) $(EDITRESLIB) -lXt $(XLIB) $(SMLIB) $(ICELIB)
ALIBS = $(XAWLIB) -lXt $(XLIB) $(SMLIB) $(ICELIB)
LINTLIBS = $(LINTXLIB)

SYS_LIBRARIES = $(CRYPTLIB) $(PASSWDLIB) -lm

VER = xlockmore
DISTVER = xlockmore-4.12

top_srcdir = ..
UTILSDIR = .

#  List of object files
XALOCKOBJS = multireq$(O)$(S)xalock$(O)

#  List of source files
XALOCKSRCS = multireq$(C) xalock$(C)

clean::
	$(RM) xalock

depend::
	$(DEPEND) $(DEPENDFLAGS) -- $(ALLDEFINES) $(DEPEND_DEFINES) -- $(SRCS)

lint:
	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

distclean::	clean
	$(RM) Makefile config.status config.cache config.log config.h

clean.all:: distclean

# -----------------------------------------------------------------------
# common rules for all Makefiles - do not edit

.c.i:
	$(RM) $@
	$(CC) -E $(CFLAGS) $(_NOOP_) $*.c > $@

emptyrule::

clean::
	$(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut   "#"*

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

man_keywords::
	catman -M $(DESTDIR)$(MANPATH) -w

# ----------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

Makefiles::

includes::

depend::

# -----------------------------------------------------------------------
# dependencies generated by makedepend

