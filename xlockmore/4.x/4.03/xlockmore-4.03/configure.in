dnl Process this file with autoconf to produce a configure script.
dnl configure.in for xlockmore.
AC_INIT(config.h.in)

PACKAGE=xlockmore
AC_SUBST(PACKAGE)
AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE")
VERSION=4.03
AC_SUBST(VERSION)
AC_DEFINE_UNQUOTED(VERSION, "$VERSION")

dnl Checks for programs.
AC_ARG_WITH(gcc,
[  --without-gcc           use CC to compile])
dnl AC_ARG_WITH(debug,
dnl [  --without-debug        use debug instead])

test -n "$CC" && cc_specified=yes
case ${with_gcc} in
  yes ) CC=gcc ;;
dnl yes ) CC=g++ ;;
  no  ) CC=cc ;;
  *   ) AC_PROG_CC;;
dnl  *   ) AC_PROG_CXX ;;
esac

dnl case ${with_debug} in
dnl   yes ) CFLAGS="${CFLAGS} -g" ;;
dnl   no ) CFLAGS="${CFLAGS} -O" ;;
dnl esac

if test "${CC}" = "gcc" ; then
  CFLAGS="${CFLAGS} -Wall"
fi

AC_PROG_LN_S
AC_PROG_CPP
AC_AIX
AC_PROG_INSTALL
dnl Optional features.
dnl add copious amounts of debugging with gcc

dnl Checks for header files.
dnl AC_HEADER_STDC /* If its not ansi, its not going to go */
AC_ISC_POSIX
dnl AC_HEADER_SYS_WAIT
dnl AC_CHECK_HEADERS(poll.h sys/poll.h)
AC_CHECK_HEADERS(fcntl.h limits.h sys/select.h sys/time.h syslog.h unistd.h memory.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
dnl AC_HEADER_SYS_WAIT
AC_TYPE_UID_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM
AC_C_INLINE

dnl Checks for library functions.
dnl AC_TYPE_GETGROUPS
dnl AC_TYPE_SIGNAL
dnl AC_CHECK_FUNCS(poll)
dnl AC_CHECK_FUNCS(signal)
AC_CHECK_FUNCS(gethostname gettimeofday select strdup)
AC_CHECK_FUNC(seteuid, AC_DEFINE(HAVE_SETEUID),
AC_CHECK_FUNC(setreuid, AC_DEFINE(HAVE_SETREUID)))

dnl X Window System files.
AC_PATH_XTRA
if test "$no_x" = yes; then
  XLIBS=NONE
else
  if test -n "${x_includes}"; then
    XLOCKINC="-I${x_includes} ${XLOCKINC}"
    XMLOCKINC="-I${x_includes} ${XMLOCKINC}"
  fi
  XLIBS="${x_libraries}"
  if test -n "${x_libraries}"; then
    XLOCKLDFLAGS="-R/usr/lib:${x_libraries}"
    XLOCKLIBPATHS="-L${x_libraries} ${XLOCKLIBPATHS}"
    XMLOCKLIBPATHS="-L${x_libraries} ${XMLOCKLIBPATHS}"
  fi
  XLOCKLIBS="${X_PRE_LIBS} ${X_EXTRA_LIBS} ${XLOCKLIBS}"
  XMLOCKLIBS="-lXt ${XMLOCKLIBS}"
dnl AC_DEFINE(X11) /* If there is no X, its not going to go */
fi

AC_ARG_WITH(includes, [  --with-includes=DIR     search include DIR for optional packages below])
case "x$withval" in
x/*|x.*)
  extra_include=$withval
  AC_MSG_RESULT([adding $extra_include to include search path for following packages])
  if test ! -d $extra_include; then
    AC_MSG_RESULT([Warning: Directory $extra_include does not exist])
  fi
  ;;
*)
  extra_include=""
  ;;
esac

AC_ARG_WITH(libraries, [  --with-libraries=DIR    search library DIR for optional packages below])
case "x$withval" in
x/*|x.*)
  extra_lib=$withval
  AC_MSG_RESULT([adding $extra_lib to library search path for following packages])
  if test ! -d $extra_lib; then
    AC_MSG_RESULT([Warning: Directory $extra_lib does not exist])
  fi
  ;;
*)
  extra_lib=""
  ;;
esac

xpm=no
dnl Xpm XPM xpm

AC_DEFUN(AC_PATH_XPM_DIRECT,
[test -z "$xpm_direct_test_library" && xpm_direct_test_library=Xpm
test -z "$xpm_direct_test_function" && xpm_direct_test_function=XpmCreateImageFromData
test -z "$xpm_direct_test_include" && xpm_direct_test_include=xpm.h
  for ac_dir in                   \
    /usr/X11R6/include/X11        \
    /usr/X11R5/include/X11        \
    /usr/X11R4/include/X11        \
    /usr/X11/include/X11          \
                                  \
    /usr/include/X11/X11          \
    /usr/include/X11R6/X11        \
    /usr/include/X11R5/X11        \
    /usr/include/X11R4/X11        \
                                  \
    /usr/local/X11/include/X11    \
    /usr/local/X11R6/include/X11  \
    /usr/local/X11R5/include/X11  \
    /usr/local/X11R4/include/X11  \
                                  \
    /usr/local/include/X11/X11    \
    /usr/local/include/X11R6/X11  \
    /usr/local/include/X11R5/X11  \
    /usr/local/include/X11R4/X11  \
                                  \
    /usr/X386/include/X11         \
    /usr/x386/include/X11         \
    /usr/XFree86/include/X11/X11  \
                                  \
    /usr/local/include/X11        \
    /usr/include/X11              \
    /usr/unsupported/include/X11  \
    /usr/athena/include/X11       \
    /usr/local/x11r5/include/X11  \
    /usr/lpp/Xamples/include/X11  \
                                  \
    /usr/openwin/include/X11      \
    /usr/openwin/share/include/X11 \
                                  \
    /usr/include/Vk               \
    $extra_include                \
    ; \
  do
    if test -r "$ac_dir/$xpm_direct_test_include"; then
      no_xpm= ac_xpm_includes=$ac_dir
      break
    fi
  done

# Check for the libraries.
# See if we find them without any special options.
# Do not add to $LIBS permanently.
ac_save_LIBS="$LIBS"
LIBS="-l$xpm_direct_test_library $LIBS"
# First see if replacing the include by lib works.
for ac_dir in `echo "$ac_xpm_includes" | sed s%/X11$%% | sed s/include/lib/` \
                          \
    /usr/X11/lib          \
    /usr/X11R6/lib        \
    /usr/X11R5/lib        \
    /usr/X11R4/lib        \
                          \
    /usr/lib/X11          \
    /usr/lib/X11R6        \
    /usr/lib/X11R5        \
    /usr/lib/X11R4        \
                          \
    /usr/local/X11/lib    \
    /usr/local/X11R6/lib  \
    /usr/local/X11R5/lib  \
    /usr/local/X11R4/lib  \
                          \
    /usr/local/lib/X11    \
    /usr/local/lib/X11R6  \
    /usr/local/lib/X11R5  \
    /usr/local/lib/X11R4  \
                          \
    /usr/X386/lib         \
    /usr/x386/lib         \
    /usr/XFree86/lib/X11  \
                          \
    /usr/lib              \
    /usr/local/lib        \
    /usr/unsupported/lib  \
    /usr/athena/lib       \
    /usr/local/x11r5/lib  \
    /usr/lpp/Xamples/lib  \
    /lib/usr/lib/X11      \
                          \
    /usr/openwin/lib      \
    /usr/openwin/share/lib \
    $extra_lib            \
    ; \
do
  for ac_extension in a so sl; do
    if test -r $ac_dir/lib${xpm_direct_test_library}.$ac_extension; then
      no_xpm= ac_xpm_libraries=$ac_dir
      break 2
    fi
  done
done
LIBS="$ac_save_LIBS"])
AC_DEFUN(AC_PATH_XPM,
[AC_REQUIRE_CPP()dnl

xpm_includes=NONE
xpm_libraries=NONE

AC_MSG_CHECKING(for XPM)
AC_ARG_WITH(xpm, [  --without-xpm           enable color pixmap XPM tests])
if test "x$with_xpm" = xno; then
  no_xpm=yes
else
  if test "x$xpm_includes" != xNONE && test "x$xpm_libraries" != xNONE; then
    no_xpm=
  else
AC_CACHE_VAL(ac_cv_path_xpm,
[# One or both of these vars are not set, and there is no cached value.
no_xpm=yes
AC_PATH_XPM_DIRECT

if test "$no_xpm" = yes; then
  ac_cv_path_xpm="no_xpm=yes"
else
  ac_cv_path_xpm="no_xpm= ac_xpm_includes=$ac_xpm_includes ac_xpm_libraries=$ac_xpm_libraries"
fi])dnl
  fi
  eval "$ac_cv_path_xpm"
fi # with_xpm != no

if test "$no_xpm" = yes; then
  AC_MSG_RESULT(no)
else
  xpm=yes
  AC_DEFINE(USE_XPMINC)
  XLOCKLIBS="${XLOCKLIBS} -lXpm"
  test "x$xpm_includes" = xNONE && xpm_includes=$ac_xpm_includes
  test "x$xpm_libraries" = xNONE && xpm_libraries=$ac_xpm_libraries
  ac_cv_path_xpm="no_xpm= ac_xpm_includes=$xpm_includes ac_xpm_libraries=$xpm_libraries"
  AC_MSG_RESULT([libraries $xpm_libraries, headers $xpm_includes])
fi
])

AC_PATH_XPM

if test "x$xpm_libraries" != x && test "x$xpm_libraries" != xNONE ; then
  XLOCKLDFLAGS="${XLOCKLDFLAGS}:$xpm_libraries"
  XLOCKLIBPATHS="${XLOCKLIBPATHS} -L$xpm_libraries"
fi
if test "x$xpm_includes" != x && test "x$xpm_includes" != xNONE ; then
  XLOCKINC="${XLOCKINC} -I$xpm_includes"
fi

dnl Xm MOTIF Motif motif

AC_DEFUN(AC_PATH_MOTIF_DIRECT,
[test -z "$motif_direct_test_library" && motif_direct_test_library=Xm
test -z "$motif_direct_test_function" && motif_direct_test_function=XmCreatePushButton
test -z "$motif_direct_test_include" && motif_direct_test_include=Xm/Xm.h
  for ac_dir in               \
    /usr/include/Motif1.2     \
    /usr/Motif1.2/include     \
                              \
    /usr/motif/include        \
                              \
    /usr/X11R6/include        \
    /usr/X11R5/include        \
    /usr/X11R4/include        \
                              \
    /usr/include/X11R6        \
    /usr/include/X11R5        \
    /usr/include/X11R4        \
                              \
    /usr/local/X11R6/include  \
    /usr/local/X11R5/include  \
    /usr/local/X11R4/include  \
                              \
    /usr/local/include/X11R6  \
    /usr/local/include/X11R5  \
    /usr/local/include/X11R4  \
                              \
    /usr/X11/include          \
    /usr/include/X11          \
    /usr/local/X11/include    \
    /usr/local/include/X11    \
                              \
    /usr/X386/include         \
    /usr/x386/include         \
    /usr/XFree86/include/X11  \
                              \
    /usr/dt/include           \
                              \
    /usr/local/include        \
    /usr/include              \
    /usr/unsupported/include  \
    /usr/athena/include       \
    /usr/local/x11r5/include  \
    /usr/lpp/Xamples/include  \
    $extra_include            \
    ; \
  do
    if test -r "$ac_dir/$motif_direct_test_include"; then
      no_motif= ac_motif_includes=$ac_dir
      break
    fi
  done

# Check for the libraries.
# See if we find them without any special options.
# Do not add to $LIBS permanently.
ac_save_LIBS="$LIBS"
LIBS="-l$motif_direct_test_library $LIBS"
# First see if replacing the include by lib works.
for ac_dir in `echo "$ac_motif_includes" | sed s/include/lib/` \
    /usr/lib/Motif1.2     \
    /usr/Motif1.2/lib     \
                          \
    /usr/motif/lib        \
                          \
    /usr/X11R6/lib        \
    /usr/X11R5/lib        \
    /usr/X11R4/lib        \
                          \
    /usr/lib/X11R6        \
    /usr/lib/X11R5        \
    /usr/lib/X11R4        \
                          \
    /usr/local/X11R6/lib  \
    /usr/local/X11R5/lib  \
    /usr/local/X11R4/lib  \
                          \
    /usr/local/lib/X11R6  \
    /usr/local/lib/X11R5  \
    /usr/local/lib/X11R4  \
                          \
    /usr/X11/lib          \
    /usr/lib/X11          \
    /usr/local/X11/lib    \
                          \
    /usr/X386/lib         \
    /usr/x386/lib         \
    /usr/XFree86/lib/X11  \
                          \
    /usr/lib              \
    /usr/local/lib        \
    /usr/unsupported/lib  \
    /usr/athena/lib       \
    /usr/local/x11r5/lib  \
    /usr/lpp/Xamples/lib  \
    $extra_lib            \
    ; \
do
  for ac_extension in a so sl; do
    if test -r $ac_dir/lib${motif_direct_test_library}.$ac_extension; then
      no_motif= ac_motif_libraries=$ac_dir
      break 2
    fi
  done
done
LIBS="$ac_save_LIBS"])
AC_DEFUN(AC_PATH_MOTIF,
[AC_REQUIRE_CPP()dnl

motif_includes=NONE
motif_libraries=NONE

AC_MSG_CHECKING(for Motif)
AC_ARG_WITH(motif, [  --without-motif         disable Motif tests])
if test "x$with_motif" = xno; then
  no_motif=yes
else
  if test "x$motif_includes" != xNONE && test "x$motif_libraries" != xNONE; then
    no_motif=
  else
AC_CACHE_VAL(ac_cv_path_motif,
[# One or both of these vars are not set, and there is no cached value.
no_motif=yes
AC_PATH_MOTIF_DIRECT

if test "$no_motif" = yes; then
  ac_cv_path_motif="no_motif=yes"
else
  ac_cv_path_motif="no_motif= ac_motif_includes=$ac_motif_includes ac_motif_libraries=$ac_motif_libraries"
fi])dnl
  fi
  eval "$ac_cv_path_motif"
fi # with_motif != no

if test "$no_motif" = yes; then
  AC_MSG_RESULT(no)
  XMLOCK=""
  INSTALL_XMLOCK=""
  UNINSTALL_XMLOCK=""
else
  XMLOCKLIBS="-lXm ${XMLOCKLIBS}"
  XMLOCK="xmlock"
  INSTALL_XMLOCK="install_xmlock"
  UNINSTALL_XMLOCK="uninstall_xmlock"
  test "x$motif_includes" = xNONE && motif_includes=$ac_motif_includes
  test "x$motif_libraries" = xNONE && motif_libraries=$ac_motif_libraries
  ac_cv_path_motif="no_motif= ac_motif_includes=$motif_includes ac_motif_libraries=$motif_libraries"
  AC_MSG_RESULT([libraries $motif_libraries, headers $motif_includes])
fi
])

AC_PATH_MOTIF

if test "x$motif_libraries" != x && test "x$motif_libraries" != xNONE ; then
  XMLOCKLIBPATHS="${XMLOCKLIBPATHS} -L$motif_libraries"
fi
if test "x$motif_includes" != x && test "x$motif_includes" != xNONE ; then
  XMLOCKINC="${XMLOCKINC} -I$motif_includes"
fi

dnl Xmu EDITRES Editres editres

AC_DEFUN(AC_PATH_EDITRES_DIRECT,
[test -z "$editres_direct_test_library" && editres_direct_test_library=Xmu
test -z "$editres_direct_test_function" && editres_direct_test_function=_XEditResCheckMessages
test -z "$editres_direct_test_include" && editres_direct_test_include=X11/Xmu/Editres.h
  for ac_dir in               \
    /usr/X11R6/include        \
    /usr/X11R5/include        \
    /usr/X11R4/include        \
    /usr/X11/include          \
                              \
    /usr/include/X11          \
    /usr/include/X11R6        \
    /usr/include/X11R5        \
    /usr/include/X11R4        \
                              \
    /usr/local/X11/include    \
    /usr/local/X11R6/include  \
    /usr/local/X11R5/include  \
    /usr/local/X11R4/include  \
                              \
    /usr/local/include/X11    \
    /usr/local/include/X11R6  \
    /usr/local/include/X11R5  \
    /usr/local/include/X11R4  \
                              \
    /usr/X386/include         \
    /usr/x386/include         \
    /usr/XFree86/include      \
                              \
    /usr/local/include        \
    /usr/include              \
    /usr/unsupported/include  \
    /usr/athena/include       \
    /usr/local/x11r5/include  \
    /usr/lpp/Xamples/include  \
                              \
    /usr/openwin/include      \
    /usr/openwin/share/include \
    $extra_include            \
    ; \
  do
    if test -r "$ac_dir/$editres_direct_test_include"; then
      no_editres= ac_editres_includes=$ac_dir
      break
    fi
  done

# Check for the libraries.
# See if we find them without any special options.
# Do not add to $LIBS permanently.
ac_save_LIBS="$LIBS"
LIBS="-l$editres_direct_test_library $LIBS"
# First see if replacing the include by lib works.
for ac_dir in `echo "$ac_editres_includes" | sed s/include/lib/` \
                          \
    /usr/X11/lib          \
    /usr/X11R6/lib        \
    /usr/X11R5/lib        \
    /usr/X11R4/lib        \
                          \
    /usr/lib/X11          \
    /usr/lib/X11R6        \
    /usr/lib/X11R5        \
    /usr/lib/X11R4        \
                          \
    /usr/local/X11/lib    \
    /usr/local/X11R6/lib  \
    /usr/local/X11R5/lib  \
    /usr/local/X11R4/lib  \
                          \
    /usr/local/lib/X11    \
    /usr/local/lib/X11R6  \
    /usr/local/lib/X11R5  \
    /usr/local/lib/X11R4  \
                          \
    /usr/X386/lib         \
    /usr/x386/lib         \
    /usr/XFree86/lib/X11  \
                          \
    /usr/lib              \
    /usr/local/lib        \
    /usr/unsupported/lib  \
    /usr/athena/lib       \
    /usr/local/x11r5/lib  \
    /usr/lpp/Xamples/lib  \
    /lib/usr/lib/X11      \
                          \
    /usr/openwin/lib      \
    /usr/openwin/share/lib \
    $extra_lib            \
    ; \
do
  for ac_extension in a so sl; do
    if test -r $ac_dir/lib${editres_direct_test_library}.$ac_extension; then
      no_editres= ac_editres_libraries=$ac_dir
      break 2
    fi
  done
done
LIBS="$ac_save_LIBS"])
AC_DEFUN(AC_PATH_EDITRES,
[AC_REQUIRE_CPP()dnl

editres_includes=NONE
editres_libraries=NONE

AC_MSG_CHECKING(for Editres)
AC_ARG_WITH(editres, [  --without-editres       do not include debugger for xmlock])
if test "x$with_editres" = xno; then
  no_editres=yes
else
  if test "x$editres_includes" != xNONE && test "x$editres_libraries" != xNONE; then
    no_editres=
  else
AC_CACHE_VAL(ac_cv_path_editres,
[# One or both of these vars are not set, and there is no cached value.
no_editres=yes
AC_PATH_EDITRES_DIRECT

if test "$no_editres" = yes; then
  ac_cv_path_editres="no_editres=yes"
else
  ac_cv_path_editres="no_editres= ac_editres_includes=$ac_editres_includes ac_editres_libraries=$ac_editres_libraries"
fi])dnl
  fi
  eval "$ac_cv_path_editres"
fi # with_editres != no

if test "$no_editres" = yes; then
  AC_MSG_RESULT(no)
else
  AC_DEFINE(USE_XMU)
  XMLOCKLIBS="-lXmu ${XMLOCKLIBS}"
  test "x$editres_includes" = xNONE && editres_includes=$ac_editres_includes
  test "x$editres_libraries" = xNONE && editres_libraries=$ac_editres_libraries
  ac_cv_path_editres="no_editres= ac_editres_includes=$editres_includes ac_editres_libraries=$editres_libraries"
  AC_MSG_RESULT([libraries $editres_libraries, headers $editres_includes])
fi
])

AC_PATH_EDITRES

if test "x$editres_libraries" != x && test "x$editres_libraries" != xNONE ; then
  XMLOCKLIBPATHS="${XMLOCKLIBPATHS} -L$editres_libraries"
fi
if test "x$editres_includes" != x && test "x$editres_includes" != xNONE ; then
  XMLOCKINC="${XMLOCKINC} -I$editres_includes"
fi

gl=no
dnl OpenGL gl

dnl test -z "$gl_direct_test_library" && gl_direct_test_library=GLU
AC_DEFUN(AC_PATH_GL_DIRECT,
[test -z "$gl_direct_test_library" && gl_direct_test_library=GL
test -z "$gl_direct_test_library" && gl_direct_test_library=GLU
test -z "$gl_direct_test_library" && gl_direct_test_library=gl
test -z "$gl_direct_test_function" && gl_direct_test_function=glXCreateContext
test -z "$gl_direct_test_include" && gl_direct_test_include=GL/gl.h
  for ac_dir in               \
    /usr/include              \
    $extra_include            \
    ; \
  do
# Make sure this is not MesaGL
    if test -r "$ac_dir/$gl_direct_test_include" && test ! -r "$ac_dir/GL/xmesa.h"; then
      no_gl= ac_gl_includes=$ac_dir
      break
    fi
  done

# Check for the libraries.
# See if we find them without any special options.
# Do not add to $LIBS permanently.
ac_save_LIBS="$LIBS"
LIBS="-l$gl_direct_test_library $LIBS"
# First see if replacing the include by lib works.
for ac_dir in `echo "$ac_gl_includes" | sed s/include/lib/` \
                          \
    /usr/lib              \
    $extra_lib            \
    ; \
do
  for ac_extension in a so sl; do
# Make sure its not a symbolic link to MesaGL library
    if test -r $ac_dir/lib${gl_direct_test_library}.$ac_extension && test ! -h $ac_dir/lib${gl_direct_test_library}.$ac_extension && test ! -r $ac_dir/libMesa${gl_direct_test_library}.$ac_extension; then
      no_gl= ac_gl_libraries=$ac_dir
      break 2
    fi
  done
done
LIBS="$ac_save_LIBS"])
AC_DEFUN(AC_PATH_GL,
[AC_REQUIRE_CPP()dnl

gl_includes=NONE
gl_libraries=NONE

AC_MSG_CHECKING(for GL)
AC_ARG_WITH(gl, [  --without-gl            disable 3D OpenGL (for GL modes)])
if test "x$with_gl" = xno; then
  no_gl=yes
else
  if test "x$gl_includes" != xNONE && test "x$gl_libraries" != xNONE; then
    no_gl=
  else
AC_CACHE_VAL(ac_cv_path_gl,
[# One or both of these vars are not set, and there is no cached value.
no_gl=yes
AC_PATH_GL_DIRECT

if test "$no_gl" = yes; then
  ac_cv_path_gl="no_gl=yes"
else
  ac_cv_path_gl="no_gl= ac_gl_includes=$ac_gl_includes ac_gl_libraries=$ac_gl_libraries"
fi])dnl
  fi
  eval "$ac_cv_path_gl"
fi # with_gl != no

if test "$no_gl" = yes; then
  AC_MSG_RESULT(no)
else
  gl=yes
  AC_DEFINE(USE_GL)
  XLOCKLIBS="${XLOCKLIBS} -lGL -lGLU -lgl"
  test "x$gl_includes" = xNONE && gl_includes=$ac_gl_includes
  test "x$gl_libraries" = xNONE && gl_libraries=$ac_gl_libraries
  ac_cv_path_gl="no_gl= ac_gl_includes=$gl_includes ac_gl_libraries=$gl_libraries"
  AC_MSG_RESULT([libraries $gl_libraries, headers $gl_includes])
fi
])

AC_PATH_GL

if test "x$gl_libraries" != x && test "x$gl_libraries" != xNONE ; then
  XLOCKLDFLAGS="${XLOCKLDFLAGS}:$gl_libraries"
  XLOCKLIBPATHS="${XLOCKLIBPATHS} -L$gl_libraries"
fi
if test "x$gl_includes" != x && test "x$gl_includes" != xNONE ; then
  XLOCKINC="${XLOCKINC} -I$gl_includes"
fi

dnl MesaGL gl

dnl test -z "$mesagl_direct_test_library" && mesagl_direct_test_library=MesaGLU
AC_DEFUN(AC_PATH_MESAGL_DIRECT,
[test -z "$mesagl_direct_test_library" && mesagl_direct_test_library=MesaGL
test -z "$mesagl_direct_test_library" && mesagl_direct_test_library=MesaGLU
test -z "$mesagl_direct_test_function" && mesagl_direct_test_function=glXCreateContext
test -z "$mesagl_direct_test_include" && mesagl_direct_test_include=GL/gl.h
  for ac_dir in               \
    /usr/X11R6/include        \
    /usr/X11R5/include        \
    /usr/X11/include          \
                              \
    /usr/include/X11          \
    /usr/include/X11R6        \
    /usr/include/X11R5        \
                              \
    /usr/local/X11/include    \
    /usr/local/X11R6/include  \
    /usr/local/X11R5/include  \
                              \
    /usr/local/include/X11    \
    /usr/local/include/X11R6  \
    /usr/local/include/X11R5  \
                              \
    /usr/X386/include         \
    /usr/x386/include         \
    /usr/XFree86/include/X11  \
                              \
    /usr/local/include        \
    /usr/include              \
    /usr/unsupported/include  \
    /usr/local/x11r5/include  \
    /usr/lpp/Xamples/include  \
                              \
    /usr/openwin/include      \
    /usr/openwin/share/include \
    $extra_include            \
    ; \
  do
    if test -r "$ac_dir/$mesagl_direct_test_include"; then
      no_mesagl= ac_mesagl_includes=$ac_dir
      break
    fi
  done

# Check for the libraries.
# See if we find them without any special options.
# Do not add to $LIBS permanently.
ac_save_LIBS="$LIBS"
LIBS="-l$mesagl_direct_test_library $LIBS"
# First see if replacing the include by lib works.
for ac_dir in `echo "$ac_mesagl_includes" | sed s/include/lib/` \
                          \
    /usr/X11/lib          \
    /usr/X11R6/lib        \
    /usr/X11R5/lib        \
                          \
    /usr/lib/X11          \
    /usr/lib/X11R6        \
    /usr/lib/X11R5        \
                          \
    /usr/local/X11/lib    \
    /usr/local/X11R6/lib  \
    /usr/local/X11R5/lib  \
                          \
    /usr/local/lib/X11    \
    /usr/local/lib/X11R6  \
    /usr/local/lib/X11R5  \
                          \
    /usr/X386/lib         \
    /usr/x386/lib         \
    /usr/XFree86/lib/X11  \
                          \
    /usr/lib              \
    /usr/local/lib        \
    /usr/unsupported/lib  \
    /usr/athena/lib       \
    /usr/local/x11r5/lib  \
    /usr/lpp/Xamples/lib  \
    /lib/usr/lib/X11      \
                          \
    /usr/openwin/lib      \
    /usr/openwin/share/lib \
    $extra_lib            \
    ; \
do
  for ac_extension in a so sl; do
    if test -r $ac_dir/lib${mesagl_direct_test_library}.$ac_extension; then
      no_mesagl= ac_mesagl_libraries=$ac_dir
      break 2
    fi
  done
done
LIBS="$ac_save_LIBS"])
AC_DEFUN(AC_PATH_MESAGL,
[AC_REQUIRE_CPP()dnl

mesagl_includes=NONE
mesagl_libraries=NONE

AC_MSG_CHECKING(for MesaGL)
AC_ARG_WITH(mesagl, [  --without-mesagl        disable 3D MesaGL (for GL modes)])
if test "x$with_mesagl" = xno; then
  no_mesagl=yes
else
  if test "x$mesagl_includes" != xNONE && test "x$mesagl_libraries" != xNONE; then
    no_mesagl=
  else
AC_CACHE_VAL(ac_cv_path_mesagl,
[# One or both of these vars are not set, and there is no cached value.
no_mesagl=yes
AC_PATH_MESAGL_DIRECT

if test "$no_mesagl" = yes; then
  ac_cv_path_mesagl="no_mesagl=yes"
else
  ac_cv_path_mesagl="no_mesagl= ac_mesagl_includes=$ac_mesagl_includes ac_mesagl_libraries=$ac_mesagl_libraries"
fi])dnl
  fi
  eval "$ac_cv_path_mesagl"
fi # with_mesagl != no

if test "$no_mesagl" = yes; then
  AC_MSG_RESULT(no)
else
  if test "$gl" = no; then
    gl=yes
    AC_DEFINE(USE_GL)
    XLOCKLIBS="${XLOCKLIBS} -lMesaGL -lMesaGLU"
    test "x$mesagl_includes" = xNONE && mesagl_includes=$ac_mesagl_includes
    test "x$mesagl_libraries" = xNONE && mesagl_libraries=$ac_mesagl_libraries
    ac_cv_path_mesagl="no_mesagl= ac_mesagl_includes=$mesagl_includes ac_mesagl_libraries=$mesagl_libraries"
    AC_MSG_RESULT([libraries $mesagl_libraries, headers $mesagl_includes])
  fi
fi
])

AC_PATH_MESAGL

if test "x$mesagl_libraries" != x && test "x$mesagl_libraries" != xNONE ; then
  XLOCKLDFLAGS="${XLOCKLDFLAGS}:$mesagl_libraries"
  XLOCKLIBPATHS="${XLOCKLIBPATHS} -L$mesagl_libraries"
fi
if test "x$mesagl_includes" != x && test "x$mesagl_includes" != xNONE ; then
  XLOCKINC="${XLOCKINC} -I$mesagl_includes"
fi

dnl DTSAVER DtSaver dtsaver DtSvc

AC_DEFUN(AC_PATH_DTSAVER_DIRECT,
[test -z "$dtsaver_direct_test_library" && dtsaver_direct_test_library=DtSvc
test -z "$dtsaver_direct_test_function" && dtsaver_direct_test_function=DtSaverGetWindows
test -z "$dtsaver_direct_test_include" && dtsaver_direct_test_include=Dt/Saver.h
  for ac_dir in            \
    /usr/dt/include        \
    $extra_include         \
    ; \
  do
    if test -r "$ac_dir/$dtsaver_direct_test_include"; then
      no_dtsaver= ac_dtsaver_includes=$ac_dir
      break
    fi
  done

# Check for the libraries.
# See if we find them without any special options.
# Do not add to $LIBS permanently.
ac_save_LIBS="$LIBS"
LIBS="-l$dtsaver_direct_test_library $LIBS"
# First see if replacing the include by lib works.
for ac_dir in `echo "$ac_dtsaver_includes" | sed s/include/lib/` \
    $extra_lib         \
    ; \
do
  for ac_extension in a so sl; do
    if test -r $ac_dir/lib${dtsaver_direct_test_library}.$ac_extension; then
      no_dtsaver= ac_dtsaver_libraries=$ac_dir
      break 2
    fi
  done
done
LIBS="$ac_save_LIBS"])
AC_DEFUN(AC_PATH_DTSAVER,
[AC_REQUIRE_CPP()dnl

dtsaver_includes=NONE
dtsaver_libraries=NONE

AC_MSG_CHECKING(for DtSaver)
AC_ARG_WITH(dtsaver, [  --without-dtsaver       disable -dtsaver option])
if test "x$with_dtsaver" = xno; then
  no_dtsaver=yes
else
  if test "x$dtsaver_includes" != xNONE && test "x$dtsaver_libraries" != xNONE; then
    no_dtsaver=
  else
AC_CACHE_VAL(ac_cv_path_dtsaver,
[# One or both of these vars are not set, and there is no cached value.
no_dtsaver=yes
AC_PATH_DTSAVER_DIRECT

if test "$no_dtsaver" = yes; then
  ac_cv_path_dtsaver="no_dtsaver=yes"
else
  ac_cv_path_dtsaver="no_dtsaver= ac_dtsaver_includes=$ac_dtsaver_includes ac_dtsaver_libraries=$ac_dtsaver_libraries"
fi])dnl
  fi
  eval "$ac_cv_path_dtsaver"
fi # with_dtsaver != no

if test "$no_dtsaver" = yes; then
  AC_MSG_RESULT(no)
else
  AC_DEFINE(USE_DTSAVER)
  XLOCKLIBS="${XLOCKLIBS} -lDtSvc"
  test "x$dtsaver_includes" = xNONE && dtsaver_includes=$ac_dtsaver_includes
  test "x$dtsaver_libraries" = xNONE && dtsaver_libraries=$ac_dtsaver_libraries
  ac_cv_path_dtsaver="no_dtsaver= ac_dtsaver_includes=$dtsaver_includes ac_dtsaver_libraries=$dtsaver_libraries"
  AC_MSG_RESULT([libraries $dtsaver_libraries, headers $dtsaver_includes])
fi
])

AC_PATH_DTSAVER

if test "x$dtsaver_libraries" != x && test "x$dtsaver_libraries" != xNONE ; then
  XLOCKLDFLAGS="${XLOCKLDFLAGS}:$dtsaver_libraries"
  XLOCKLIBPATHS="${XLOCKLIBPATHS} -L$dtsaver_libraries"
fi
if test "x$dtsaver_includes" != x && test "x$dtsaver_includes" != xNONE ; then
  XLOCKINC="${XLOCKINC} -I$dtsaver_includes"
fi

sound=no
dnl RPLAY RPlay rplay

AC_DEFUN(AC_PATH_RPLAY_DIRECT,
[test -z "$rplay_direct_test_library" && rplay_direct_test_library=rplay
test -z "$rplay_direct_test_function" && rplay_direct_test_function=rplay_open_default
test -z "$rplay_direct_test_include" && rplay_direct_test_include=rplay.h
  for ac_dir in               \
    /usr/X11R6/include        \
    /usr/X11R5/include        \
    /usr/X11/include          \
    /usr/local/include        \
    /usr/include              \
    $extra_include            \
    ; \
  do
    if test -r "$ac_dir/$rplay_direct_test_include"; then
      no_rplay= ac_rplay_includes=$ac_dir
      break
    fi
  done

# Check for the libraries.
# See if we find them without any special options.
# Do not add to $LIBS permanently.
ac_save_LIBS="$LIBS"
LIBS="-l$play_direct_test_library $LIBS"
# First see if replacing the include by lib works.
for ac_dir in `echo "$ac_rplay_includes" | sed s/include/lib/` \
                          \
    /usr/X11R6/lib        \
    /usr/X11R5/lib        \
    /usr/X11/lib          \
    /usr/lib              \
    /usr/local/lib        \
    $extra_lib            \
    ; \
do
  for ac_extension in a so sl; do
    if test -r $ac_dir/lib${rplay_direct_test_library}.$ac_extension; then
      no_rplay= ac_rplay_libraries=$ac_dir
      break 2
    fi
  done
done
LIBS="$ac_save_LIBS"])
AC_DEFUN(AC_PATH_RPLAY,
[AC_REQUIRE_CPP()dnl

rplay_includes=NONE
rplay_libraries=NONE

AC_MSG_CHECKING(for RPLAY)
AC_ARG_WITH(rplay, [  --without-rplay         disable RPLAY sounds])
if test "x$with_rplay" = xno; then
  no_rplay=yes
else
  if test "x$rplay_includes" != xNONE && test "x$rplay_libraries" != xNONE; then
    no_rplay=
  else
AC_CACHE_VAL(ac_cv_path_rplay,
[# One or both of these vars are not set, and there is no cached value.
no_rplay=yes
AC_PATH_RPLAY_DIRECT

if test "$no_rplay" = yes; then
  ac_cv_path_rplay="no_rplay=yes"
else
  ac_cv_path_rplay="no_rplay= ac_rplay_includes=$ac_rplay_includes ac_rplay_libraries=$ac_rplay_libraries"
fi])dnl
  fi
  eval "$ac_cv_path_rplay"
fi # with_rplay != no

if test "$no_rplay" = yes; then
  AC_MSG_RESULT(no)
else
  sound=yes
  AC_DEFINE(USE_RPLAY)
  XLOCKLIBS="${XLOCKLIBS} -lrplay"
  test "x$rplay_includes" = xNONE && rplay_includes=$ac_rplay_includes
  test "x$rplay_libraries" = xNONE && rplay_libraries=$ac_rplay_libraries
  ac_cv_path_rplay="no_rplay= ac_rplay_includes=$rplay_includes ac_rplay_libraries=$rplay_libraries"
  AC_MSG_RESULT([libraries $rplay_libraries, headers $rplay_includes])
fi
])

AC_PATH_RPLAY

if test "x$rplay_libraries" != x && test "x$rplay_libraries" != xNONE ; then
  XLOCKLDFLAGS="${XLOCKLDFLAGS}:$rplay_libraries"
  XLOCKLIBPATHS="${XLOCKLIBPATHS} -L$rplay_libraries"
fi
if test "x$rplay_includes" != x && test "x$rplay_includes" != xNONE ; then
  XLOCKINC="${XLOCKINC} -I$rplay_includes"
fi

dnl NAS audio

AC_DEFUN(AC_PATH_NAS_DIRECT,
[test -z "$nas_direct_test_library" && nas_direct_test_library=audio
test -z "$nas_direct_test_function" && nas_direct_test_function=AuOpenServer
test -z "$nas_direct_test_include" && nas_direct_test_include=audio/audio.h
  for ac_dir in               \
    /usr/X11R6/include        \
    /usr/X11R5/include        \
    /usr/X11/include          \
    /usr/local/include        \
    /usr/include              \
    $extra_include            \
    ; \
  do
    if test -r "$ac_dir/$nas_direct_test_include"; then
      no_nas= ac_nas_includes=$ac_dir
      break
    fi
  done

# Check for the libraries.
# See if we find them without any special options.
# Do not add to $LIBS permanently.
ac_save_LIBS="$LIBS"
LIBS="-l$play_direct_test_library $LIBS"
# First see if replacing the include by lib works.
for ac_dir in `echo "$ac_nas_includes" | sed s/include/lib/` \
                          \
    /usr/X11R6/lib        \
    /usr/X11R5/lib        \
    /usr/X11/lib          \
    /usr/lib              \
    /usr/local/lib        \
    $extra_lib            \
    ; \
do
  for ac_extension in a so sl; do
    if test -r $ac_dir/lib${nas_direct_test_library}.$ac_extension; then
      no_nas= ac_nas_libraries=$ac_dir
      break 2
    fi
  done
done
LIBS="$ac_save_LIBS"])
AC_DEFUN(AC_PATH_NAS,
[AC_REQUIRE_CPP()dnl

nas_includes=NONE
nas_libraries=NONE

AC_MSG_CHECKING(for NAS)
AC_ARG_WITH(nas, [  --without-nas           disable NAS sounds])
if test "x$with_nas" = xno; then
  no_nas=yes
else
  if test "x$nas_includes" != xNONE && test "x$nas_libraries" != xNONE; then
    no_nas=
  else
AC_CACHE_VAL(ac_cv_path_nas,
[# One or both of these vars are not set, and there is no cached value.
no_nas=yes
AC_PATH_NAS_DIRECT

if test "$no_nas" = yes; then
  ac_cv_path_nas="no_nas=yes"
else
  ac_cv_path_nas="no_nas= ac_nas_includes=$ac_nas_includes ac_nas_libraries=$ac_nas_libraries"
fi])dnl
  fi
  eval "$ac_cv_path_nas"
fi # with_nas != no

if test "$no_nas" = yes; then
  AC_MSG_RESULT(no)
else
  if test "$sound" = no; then
    sound=yes
    AC_DEFINE(USE_NAS)
    XLOCKLIBS="${XLOCKLIBS} -lnas"
    test "x$nas_includes" = xNONE && nas_includes=$ac_nas_includes
    test "x$nas_libraries" = xNONE && nas_libraries=$ac_nas_libraries
    ac_cv_path_nas="no_nas= ac_nas_includes=$nas_includes ac_nas_libraries=$nas_libraries"
    AC_MSG_RESULT([libraries $nas_libraries, headers $nas_includes])
  fi
fi
])

AC_PATH_NAS

if test "x$nas_libraries" != x && test "x$nas_libraries" != xNONE ; then
  XLOCKLDFLAGS="${XLOCKLDFLAGS}:$nas_libraries"
  XLOCKLIBPATHS="${XLOCKLIBPATHS} -L$nas_libraries"
fi
if test "x$nas_includes" != x && test "x$nas_includes" != xNONE ; then
  XLOCKINC="${XLOCKINC} -I$nas_includes"
fi

dnl Should have a tester for XHPUX Xhp

dnl Now we handle the various system dependant problems
dnl that are not addressed in the X header files, or things dealing
dnl with utility quirks on some systems.

aixv3=no
dirent=yes

AC_CANONICAL_HOST
canonical=$host
case "${canonical}" in

  *-*-aix* )
    BITMAPTYPE="x11"
    PIXMAPTYPE="x11"
    AC_DEFINE(AIXV3)
    aixv3=yes
    case "${canonical}" in
      *-*-aix2* | *-*-aix3.0* | *-*-aix3.1* )
        AC_DEFINE(LESS_THAN_AIX3_2)
      ;;
    esac
dnl if your site is using AFS
dnl AC_DEFINE(AFS)
dnl XLOCKINC="${XLOCKINC} -I/usr/afsws/include"
dnl XLOCKLIBS="${XLOCKLIBS} -L/usr/afsws/lib -L/usr/afsws/lib/afs -lkauth -lubik -lprot -lrxkad -lrx -llwp -lauth -lsys -ldes -lcmd -lcom_err /usr/afsws/lib/afs/util.a -laudit"
  ;;

  *-*-freebsd* )
    BITMAPTYPE="bsd"
    PIXMAPTYPE="bsd"
  ;;

  *-*-netbsd* | *-*-openbsd* )
    BITMAPTYPE="bsd"
    PIXMAPTYPE="bsd"
  ;;

  *-*-dgux5* )
    BITMAPTYPE="x11"
    PIXMAPTYPE="x11"
  ;;

  *-*-hpux* )
    if test "${CC}" = "cc" ; then
      CFLAGS="${CFLAGS} -O -Aa -z -D_HPUX_SOURCE"
      GPROF_CFLAGS="${GPROF_CFLAGS} -Aa -z -D_HPUX_SOURCE"
    fi
dnl    LDFLAGS=-Wl,-B,immediate
    XLOCKLIBS="-lXhp11 ${XLOCKLIBS}"
    AC_DEFINE(SYSV)
    AC_DEFINE(SVR4)
    BITMAPTYPE="hp"
    PIXMAPTYPE="hp"
  ;;

  *-*-irix5* | *-*-irix6* )
    if test "${CC}" = "cc" ; then
      CFLAGS="${CFLAGS} -fullwarn"
    fi
    BITMAPTYPE="sgi"
    PIXMAPTYPE="sgi"
  ;;

  *-*-linux* )
    AC_CHECK_HEADER(elf.h, AC_DEFINE(HAVE_SHADOW))
dnl    CFLAGS="${CFLAGS} -ansi -pedantic"
    AC_DEFINE(linux)
dnl    AC_DEFINE(__i386__)
    AC_DEFINE(_POSIX_SOURCE)
    AC_DEFINE(_BSD_SOURCE)
    AC_DEFINE(_GNU_SOURCE)
dnl    AC_DEFINE(DX_LOCALE)
dnl    INSTPGMFLAGS="-m 2111"
dnl    INSTPGMFLAGS="-m 4111"
    BITMAPTYPE="linux"
    PIXMAPTYPE="linux"
dnl if Shadow and not elf
dnl XLOCKLIBS="${XLOCKLIBS} -lgdbm"
  ;;

  *-*-osf* )
    BITMAPTYPE="x11"
    PIXMAPTYPE="x11"
    AC_MSG_CHECKING(for Digital Unix Enhanced Security)
    if test -f /usr/sbin/rcmgr && test -f /etc/rc.config ; then
      if test X`/usr/sbin/rcmgr get SECURITY` = XENHANCED ; then
        AC_MSG_RESULT(yes)
        AC_DEFINE(OSF1_ENH_SEC)
        AC_SUBST(OSF1_ENH_SEC)
        XLOCKLIBS="${XLOCKLIBS} -lsecurity"
        INSTPGMFLAGS="-g auth -m 2111"
      else
        AC_MSG_RESULT(no)
      fi
    fi
  ;;

  *-*-solaris2* )
    AC_DEFINE(SOLARIS2)

dnl DIRENT seems screwed up, check out utils.c and grep for Solaris2
dnl dirent=yes
dnl Then try  xlock -debug -mode image -imagefile ./bitmaps/
dnl       or  xlock -debug -mode image -imagefile ./bitmaps/dimple1.xbm

dnl No random images by giving directory name
    dirent=no

dnl    INSTPGMFLAGS="-m 4111"
    AC_DEFINE(HAVE_SHADOW)
    AC_DEFINE(SYSV)
    AC_DEFINE(SVR4)
    BITMAPTYPE="sun"
    PIXMAPTYPE="sol"
dnl    XLOCKLIBS="${XLOCKLIBS} -lsocket -lnsl -lposix4"
    XLOCKLIBS="${XLOCKLIBS} -lposix4"
    LIBS="${LIBS} -lsocket -lnsl -lposix4"
    LDFLAGS="${XLOCKLDFLAGS}"
  ;;

  *-*-sunos4* )
    AC_DEFINE(SUNOS4)
    BITMAPTYPE="sun"
    PIXMAPTYPE="sun"
  ;;

  *-*-sysv5* )
    BITMAPTYPE="x11"
    PIXMAPTYPE="x11"
  ;;

  *)
    BITMAPTYPE="x11"
    PIXMAPTYPE="x11"
  ;;
esac


if test "$dirent" = yes; then
  AC_HEADER_DIRENT
fi

AC_CHECK_FUNC(nanosleep, AC_DEFINE(HAVE_NANOSLEEP),
AC_CHECK_FUNC(usleep, AC_DEFINE(HAVE_USLEEP)))

srand=no
AC_CHECK_FUNC(srand48, AC_DEFINE(SRAND,srand48) AC_DEFINE(LRAND,lrand48)
  AC_DEFINE(MAXRAND,2147483648.0),
[AC_CHECK_FUNC(srandom, AC_DEFINE(SRAND,srandom) AC_DEFINE(LRAND,random)
  AC_DEFINE(MAXRAND,2147483648.0),
AC_CHECK_FUNC(srand, AC_DEFINE(SRAND,srand) AC_DEFINE(LRAND,rand) srand=yes))])

if test "$srand" = yes; then
  if test "$aixv3" = yes; then
    AC_DEFINE(MAXRAND,2147483648.0)
  else
    AC_DEFINE(MAXRAND,32768.0)
  fi
fi

AC_MSG_CHECKING([matherr support])
AC_CACHE_VAL(ac_cv_c_matherr,[   
AC_TRY_COMPILE([#include <math.h>], [
struct exception x;
x.type = DOMAIN;  
x.type = SING; 
], ac_cv_c_matherr=yes, ac_cv_c_matherr=no)])
if test x"$ac_cv_c_matherr" = xyes; then    
    AC_DEFINE(USE_MATHERR)
    AC_MSG_RESULT(yes)
else
    AC_MSG_RESULT(no)
fi

AC_ARG_ENABLE(bitmapdir, [  --enable-bitmapdir=DIR  set directory for bitmaps, default is ./bitmaps],bitmap_dir=$enableval,bitmap_dir=no)
case "x$bitmap_dir" in
x/*|x.*)
  AC_MSG_RESULT([setting BITMAPDIR = $enableval])
  BITMAPDIR=$enableval
  if test ! -d $bitmap_dir; then
    AC_MSG_RESULT([Warning: Directory $enableval does not exist])
  fi
  ;;
*)
  BITMAPDIR="${srcdir}/bitmaps"
  bitmap_dir="$srcdir/bitmaps"
  ;;
esac

AC_ARG_ENABLE(bitmaptype, [  --enable-bitmaptype=name
                          set name for bitmap type],bitmap_type=$enableval,bitmap_type=no)
case "x$bitmap_type" in
xyes*|xno*)
  ;;
*)
  AC_MSG_RESULT([setting BITMAPTYPE = $enableval])
  BITMAPTYPE=$enableval
  if test ! -f $bitmap_dir/l-$BITMAPTYPE.xbm; then
    AC_MSG_RESULT([Warning: Bitmap $BITMAPDIR/l-$BITMAPTYPE.xbm does not exist])
  fi
  ;;
esac

AC_ARG_ENABLE(pixmapdir, [  --enable-pixmapdir=DIR  set directory for pixmaps, default is ./pixmaps],pixmap_dir=$enableval,pixmap_dir=no)
case "x$pixmap_dir" in
x/*|x.*)
  AC_MSG_RESULT([setting PIXMAPDIR = $enableval])
  PIXMAPDIR=$enableval
  if test ! -d $pixmap_dir; then
    AC_MSG_RESULT([Warning: Directory $enableval does not exist])
  fi
  ;;
*)
  PIXMAPDIR="${srcdir}/pixmaps"
  pixmap_dir="$srcdir/pixmaps"
  ;;
esac

AC_ARG_ENABLE(pixmaptype, [  --enable-pixmaptype=name
                          set name for pixmap type],pixmap_type=$enableval,pixmap_type=no)
case "x$pixmap_type" in
xyes*|xno*)
  ;;
*)
  AC_MSG_RESULT([setting PIXMAPTYPE = $enableval])
  PIXMAPTYPE=$enableval
  if test ! -f $pixmap_dir/m-$PIXMAPTYPE.xpm; then
    AC_MSG_RESULT([Warning: Pixmap $PIXMAPDIR/m-$PIXMAPTYPE.xpm does not exist])
  fi
  ;;
esac

AC_ARG_ENABLE(mapdir, [  --enable-mapdir=DIR     set directory for bitmaps and pixmaps],map_dir=$enableval,map_dir=no)
case "x$map_dir" in
x/*|x.*)
  AC_MSG_RESULT([setting BITMAPDIR = $enableval])
  BITMAPDIR=$enableval
  AC_MSG_RESULT([setting PIXMAPDIR = $enableval])
  PIXMAPDIR=$enableval
  if test ! -d $map_dir; then
    AC_MSG_RESULT([Warning: Directory $enableval does not exist])
  fi
  ;;
*)
  BITMAPDIR="${srcdir}/bitmaps"
  bitmap_dir="$srcdir/bitmaps"
  PIXMAPDIR="${srcdir}/pixmaps"
  pixmap_dir="$srcdir/pixmaps"
  ;;
esac

AC_ARG_ENABLE(maptype, [  --enable-maptype=name   set name for bitmap and pixmap type],map_type=$enableval,map_type=no)
case "x$map_type" in
xyes*|xno*)
  ;;
*)
  AC_MSG_RESULT([setting BITMAPTYPE = $enableval])
  BITMAPTYPE=$enableval
  if test ! -f $map_dir/l-$BITMAPTYPE.xbm; then
    AC_MSG_RESULT([Warning: Bitmap $BITMAPDIR/l-$BITMAPTYPE.xbm does not exist])
  fi
  AC_MSG_RESULT([setting PIXMAPTYPE = $enableval])
  PIXMAPTYPE=$enableval
  if test ! -f $map_dir/m-$PIXMAPTYPE.xpm; then
    AC_MSG_RESULT([Warning: Pixmap $PIXMAPDIR/m-$PIXMAPTYPE.xpm does not exist])
  fi
  ;;
esac

if test "$sound" = no; then
  AC_ARG_ENABLE(def_play, [  --enable-def-play=program
                          set def-play to program that plays sounds],def_play=$enableval,def_play=no)
  if test "$def_play" != no; then
    AC_MSG_RESULT([defining option DEF_PLAY = "$enableval"])
    AC_DEFINE_UNQUOTED(DEF_PLAY,"$enableval")
  fi
fi

AC_ARG_ENABLE(vroot, [  --disable-vroot         disables xlock from being able to run in root window
                          (some window managers have problems)],use_vroot=$enableval,use_vroot=yes)
if test "$use_vroot" = yes; then
  AC_MSG_RESULT([defining option USE_VROOT])
  AC_DEFINE(USE_VROOT)
fi

AC_ARG_ENABLE(allow-root, [  --disable-allow-root    allows users to turn off allowroot (default is to
                          always allow root to be able to unlock xlock)],allow_root=$enableval,allow_root=yes)
if test "$allow_root" = yes; then
  AC_MSG_RESULT([defining option ALWAYS_ALLOW_ROOT])
  AC_DEFINE(ALWAYS_ALLOW_ROOT)
fi

AC_ARG_ENABLE(syslog, [  --enable-syslog         enable syslog logging],use_syslog=$enableval,use_syslog=no)
if test "$use_syslog" = yes; then
  AC_MSG_RESULT([defining option USE_SYSLOG])
  AC_DEFINE(USE_SYSLOG)
fi
 
AC_ARG_ENABLE(multiple-root, [  --enable-multiple-root  enable multiple root users],use_multiple_root=$enableval,use_multiple_root=no)
if test "$use_multiple_root" = yes; then
  AC_MSG_RESULT([defining option USE_MULTIPLE_ROOT])
  AC_DEFINE(USE_MULTIPLE_ROOT)
fi
 
AC_ARG_ENABLE(mouse-motion, [  --enable-mouse-motion   password screen displayed with mouse motion],use_mouse_motion=$enableval,use_mouse_motion=no)
if test "$use_mouse_motion" = yes; then
  AC_MSG_RESULT([defining option USE_MOUSE_MOTION])
  AC_DEFINE(USE_MOUSE_MOTION)
fi
 
AC_ARG_ENABLE(old-event-loop, [  --enable-old-event-loop some machines may still need this
                          (fd_set errors may be a sign)],use_old_event_loop=$enableval,use_old_event_loop=no)
if test "$use_old_event_loop" = yes; then
  AC_MSG_RESULT([defining option USE_OLD_EVENT_LOOP])
  AC_DEFINE(USE_OLD_EVENT_LOOP)
fi

dnl AC_ARG_ENABLE(vmsutils, [  --enable-vmsutils       patches up old __VMS_VER < 70000000],use_vmsutils=$enableval,use_vmsutils=no)
dnl if test "$use_vmsutils" = yes; then
dnl   AC_MSG_RESULT([defining option USE_VMSUTILS])
dnl   AC_DEFINE(USE_VMSUTILS)
dnl fi
 
AC_ARG_ENABLE(xlockrc, [  --enable-xlockrc        for unknown shadow passwd algorithm],use_xlockrc=$enableval,use_xlockrc=no)
if test "$use_xlockrc" = yes; then
  AC_MSG_RESULT([defining option USE_XLOCKRC])
  AC_DEFINE(USE_XLOCKRC)
fi
 
AC_ARG_ENABLE(auto-logout, [  --enable-auto-logout=time
                          enable auto-logout code for lab use (time in minutes)],use_auto_logout=$enableval,use_auto_logout=no)
case "x$use_auto_logout" in
x|xyes*)
  AC_MSG_RESULT([defining option USE_AUTO_LOGOUT = 240 minutes])
  AC_DEFINE(USE_AUTO_LOGOUT,240)
  ;;
x[[0-9]]*)
  AC_MSG_RESULT([defining option USE_AUTO_LOGOUT = $enableval minutes])
  AC_DEFINE_UNQUOTED(USE_AUTO_LOGOUT,$enableval)
  ;;
xno*)
  ;;
*)
  AC_MSG_RESULT([Warning: Illegal time value "$use_auto_logout" given])
  AC_MSG_RESULT([defining option USE_AUTO_LOGOUT = 240 minutes])
  AC_DEFINE(USE_AUTO_LOGOUT,240)
  ;;
esac
 
AC_ARG_ENABLE(default-auto-logout, [  --enable-default-auto-logout=time
                          set default-auto-logout (time in minutes)],def_auto_logout=$enableval,def_auto_logout=no)
case "x$def_auto_logout" in
x|xyes*)
  AC_MSG_RESULT([defining option DEF_AUTO_LOGOUT = 120 minutes])
  AC_DEFINE(DEF_AUTO_LOGOUT,"120")
  ;;
x[[0-9]]*)
  AC_MSG_RESULT([defining option DEF_AUTO_LOGOUT = $enableval minutes])
  AC_DEFINE_UNQUOTED(DEF_AUTO_LOGOUT,"$enableval")
  ;;
xno*)
  ;;
*)
  AC_MSG_RESULT([Warning: Illegal time value "$def_auto_logout" given])
  AC_MSG_RESULT([defining option DEF_AUTO_LOGOUT = 120 minutes])
  AC_DEFINE(DEF_AUTO_LOGOUT,"120")
  ;;
esac
 
AC_ARG_ENABLE(button-logout, [  --enable-button-logout=time
                          enable button logout for lab use (time in minutes)],use_button_logout=$enableval,use_button_logout=no)
case "x$use_button_logout" in
x|xyes*)
  AC_MSG_RESULT([defining option USE_BUTTON_LOGOUT = 10 minutes])
  AC_DEFINE(USE_BUTTON_LOGOUT,10)
  ;;
x[[0-9]]*)
  AC_MSG_RESULT([defining option USE_BUTTON_LOGOUT = $enableval minutes])
  AC_DEFINE_UNQUOTED(USE_BUTTON_LOGOUT,$enableval)
  ;;
xno*)
  ;;
*)
  AC_MSG_RESULT([Warning: Illegal time value "$use_button_logout" given])
  AC_MSG_RESULT([defining option USE_BUTTON_LOGOUT = 10 minutes])
  AC_DEFINE(USE_BUTTON_LOGOUT,10)
  ;;
esac
 
AC_ARG_ENABLE(default-button-logout, [  --enable-default-button-logout=time
                          set default-button-logout (time in minutes)],def_button_logout=$enableval,def_button_logout=no)
case "x$def_button_logout" in
x|xyes*)
  AC_MSG_RESULT([defining option DEF_BUTTON_LOGOUT = 5 minutes])
  AC_DEFINE(DEF_BUTTON_LOGOUT,"5")
  ;;
x[[0-9]]*)
  AC_MSG_RESULT([defining option DEF_BUTTON_LOGOUT = $enableval minutes])
  AC_DEFINE_UNQUOTED(DEF_BUTTON_LOGOUT,"$enableval")
  ;;
xno*)
  ;;
*)
  AC_MSG_RESULT([Warning: Illegal time value "$def_button_logout" given])
  AC_MSG_RESULT([defining option DEF_BUTTON_LOGOUT = 5 minutes])
  AC_DEFINE(DEF_BUTTON_LOGOUT,"5")
  ;;
esac
 
AC_ARG_ENABLE(bomb, [  --disable-bomb          disable automatic logout mode],use_bomb=$enableval,use_bomb=yes)
if test "$use_bomb" = yes; then
  AC_MSG_RESULT([defining option USE_BOMB])
  AC_DEFINE(USE_BOMB)
fi

AC_ARG_ENABLE(closedown-logout, [  --enable-closedown-logout
                          define this one or next, with enable-auto-logout,],closedown_logout=$enableval,closedown_logout=no)
if test "$closedown_logout" = yes; then
  AC_MSG_RESULT([defining option CLOSEDOWN_LOGOUT])
  AC_DEFINE(CLOSEDOWN_LOGOUT)
fi
 
AC_ARG_ENABLE(session-logout, [  --enable-session-logout  enable-button-logout, and/or enable-bomb, for xdm],session_logout=$enableval,session_logout=no)
if test "$session_logout" = yes; then
  AC_MSG_RESULT([defining option SESSION_LOGOUT])
  AC_DEFINE(SESSION_LOGOUT)
fi
 
AC_ARG_ENABLE(staff-file, [  --enable-staff-file=filename
                          set file of staff who are exempt from auto-logout],use_staff_file=$enableval,use_staff_file=no)
case "x$use_staff_file" in
x|xyes*)
  AC_MSG_RESULT([defining option STAFF_FILE = "/usr/remote/etc/xlock.staff"])
  AC_DEFINE_UNQUOTED(STAFF_FILE,"/usr/remote/etc/xlock.staff")
  if test ! -f /usr/remote/etc/xlock.staff; then
    AC_MSG_RESULT([Warning: File /usr/remote/etc/xlock.staff does not exist])
  fi
  ;;
x/*)
  AC_MSG_RESULT([defining option STAFF_FILE = "$enableval"])
  AC_DEFINE_UNQUOTED(STAFF_FILE,"$enableval")
  if test ! -f $use_staff_file; then
    AC_MSG_RESULT([Warning: File $enableval does not exist])
  fi
  ;;
esac
 
AC_ARG_ENABLE(staff-netgroup, [  --enable-staff-netgroup=netgroup
                          set netgroup of staff who are exempt from auto-logout],use_staff_netgroup=$enableval,use_staff_netgroup=no)
if test "$use_staff_netgroup" != no; then
  AC_MSG_RESULT([defining option STAFF_NETGROUP = "$enableval"])
  AC_DEFINE_UNQUOTED(STAFF_NETGROUP,"$enableval")
fi
 
AC_ARG_ENABLE(hackers, [  --enable-hackers        enable hackers modes (possibly making xlock unstable)],hackers=$enableval,hackers=no)
if test "$hackers" = yes; then
  AC_MSG_RESULT([enabling hackers modes])
  HACKERS=""
else
  HACKERS="#"
fi
 

XLOCKLIBS="${XLOCKLIBPATHS} ${XLOCKLIBS} -lX11 -lXext -lm"
XMLOCKLIBS="${XMLOCKLIBPATHS} ${XMLOCKLIBS} -lX11"
AC_SUBST(LDFLAGS)
AC_SUBST(INSTPGMFLAGS)
AC_SUBST(XLOCKINC)
AC_SUBST(XMLOCKINC)
AC_SUBST(XLIBS)
AC_SUBST(BITMAPTYPE)
AC_SUBST(PIXMAPTYPE)
AC_SUBST(BITMAPDIR)
AC_SUBST(PIXMAPDIR)
AC_SUBST(XLOCKLIBS)
AC_SUBST(XMLOCKLIBS)
AC_SUBST(XMLOCK)
AC_SUBST(INSTALL_XMLOCK)
AC_SUBST(UNINSTALL_XMLOCK)
AC_SUBST(LINT)
AC_SUBST(HACKERS)

AC_CONFIG_HEADER(config.h)
AC_OUTPUT(Makefile)
