# @(#)Makefile.hp	3.11 96/09/20 xlockmore

#C++ stuff
#.SUFFIXES:	.cc
#
#.cc.o:
#	$(CC) -c $(CFLAGS) $<

FLAGBITS    = hp
BITMAPTYPE	= hp
PIXMAPTYPE	= hp
#EYESBITMAP	= m-$(BITMAPTYPE)
EYESBITMAP	= m-grelb
IMAGEBITMAP	= m-$(BITMAPTYPE)
#LIFEBITMAP	= s-$(BITMAPTYPE)
LIFEBITMAP	= s-grelb
#LIFE1DBITMAP	= t-$(BITMAPTYPE)
LIFE1DBITMAP	= t-x11
MAZEBITMAP	= l-$(BITMAPTYPE)
#PACMANBITMAP = m-$(BITMAPTYPE)
PACMANBITMAP  = m-ghost
PUZZLEBITMAP	= l-$(BITMAPTYPE)
IMAGEPIXMAP	= m-$(PIXMAPTYPE)
PUZZLEPIXMAP	= m-$(PIXMAPTYPE)

# Set your ANSI C compiler
#CC		= g++ -Wall
#CC		= gcc -Wall
#CC		= cc -Ae
CC		= cc

LINT		= lint

# Change VPATH below to match relative path for GNU make (cwd is default)
VPATH		= .
#VPATH		= ..

BITMAPDIR       = $(VPATH)/bitmaps
PIXMAPDIR       = $(VPATH)/pixmaps
FLAGDIR         = $(VPATH)/flags
HACKERDIR       = $(VPATH)/hackers

#MOTIFHOME	= /usr/local
#MOTIFHOME	= /usr/dt

# X include files
#XINC		= -I/usr/local/include
#XINC		= -I/usr/include/X11R4
XINC		= -I/usr/include/X11R5
#XINC		= -I$(OPENWINHOME)/include
#XINC		= -I$(MOTIFHOME)/include

# X libraries
#XLIBPATH	= -L/usr/local/lib
#XLIBPATH	= -L/usr/lib/X11R4
XLIBPATH	= -L/usr/lib/X11R5
#XLIBPATH	= -L$(OPENWINHOME)/lib
#XLIBPATH	= -L$(MOTIFHOME)/lib

# to use full color xpm images, uncomment
#XPMDEF		= -DHAS_XPM
# use the following if your xpm.h file is not in an X11 directory
#XPMDEF   = -DHAS_XPMINC
#
# XPM include path, below is a guess, it is assumed that it is in X11/xpm.h
#XPMINC		= -I/usr/local/include
#
# XPM library, the path is a guess
#XPMLIB		= -L/usr/local/lib -lXpm
# also see image.c below

# to use Motif, uncomment
# XM include path, below is a guess, needed if not with your X11 stuff
#XMINC    = -I$(MOTIFHOME)/include
#
# XM library, the path is a guess
#XMLIB    = -lXm
#XMLIB    = -L$(MOTIFHOME)/lib -lXm
#
# Debugging with editres
# EDITRESDEF = -DHAS_XMU
# EDITRESLIB = -lXmu

# to use for CDE DT saver, uncomment
#DTSAVERDEF	= -DDT_SAVER
#
# CDE DT include path, below is a guess
#DTSAVERINC	= -I/usr/dt/include
#
# CDE DT library, the path is a guess
#DTSAVERLIB	= -L/usr/dt/lib -lDtSvc

# to use RPLAY audio, uncomment
#SOUNDDEF	= -DHAS_RPLAY
#
# RPLAY include path, below is a guess
#SOUNDINC	= -I/usr/local/include
#
# RPLAY library, the path is a guess
#SOUNDLIB	= -L/usr/local/lib -lrplay
#
# system play
# SUNOS 4.1.3
#DEF_PLAY = "/usr/demo/SOUND/play sounds/"
# IRIX 5.3
#DEF_PLAY = "/usr/sbin/sfplay sounds/"

# Add hackers modes as you like.  It may make your xlock unstable.
# If you only want some of these you must remove the ones you do
# not want from mode.c and mode.h and from SRC2 and OBJ2 below.
# Please do not uncomment for precompiled distributions.
#HACKDEF	= -DUSE_HACKERS

# special password defines
# (Shadow, HP-UX with Secured Passwords, Passwd Etc, KRB4, KRB5, or DCE authentication)
#PASSWDDEF	= -DHAS_SHADOW
#PASSWDDEF	= -DHPUX_SECURE_PASSWD
#PASSWDDEF	= -DHP_PASSWDETC
#PASSWDDEF	= -DHAS_KRB4
#PASSWDDEF	= -DHAS_KRB5
#PASSWDDEF	= -DDCE_PASSWD
#
# special password include path
# The following is needed for KRB4, KRB5, or DCE authentication
#PASSWDINC	= -I/usr/athena/include
#PASSWDINC	= -I/opt/krb5/include
#PASSWDINC	= -I/usr/include/reentrant
#
# special password library (Shadow, Passwd Etc, KRB4, KRB5, or DCE  authentication)
#PASSWDLIB	= -lshadow
#PASSWDLIB	= -lrgy -lnck -lndbm -lsec
#PASSWDLIB	= -L/usr/athena/lib -lkrb -ldes
#PASSWDLIB	= -L/opt/krb5/lib -lkrb5 -lcrypto -lcom_err
#PASSWDLIB	= -ldce -lc_r
#
# special encryption library
#CRYPTLIB	= -lcrypt
#

# directory of your app-defaults directory, below is a guess
LIBDIR		= /usr/local/lib/X11

# miscellaneous defines
# -DUSE_VROOT		allows xlock to run in root window (may
#			cause problems with certain window managers)
# -DALWAYS_ALLOW_ROOT	users can not turn off allowroot
# -DSYSLOG	for paranoid administrators
# -DMULTIPLE_ROOT	multiple root users ... security?
# -DMOUSE_MOTION	password screen displayed with mouse motion
# -DOLD_EVENT_LOOP	some machines may still need this (fd_set
#			errors may be a sign)
#
# For personal use you may want to consider:
#  -DUSE_XLOCKRC	paranoid admin or unknown shadow passwd alg
#
# For labs you may want to consider:
#  -DAUTO_LOGOUT	enable auto-logout code
#  -DLOGOUT_BUTTON	enable logout button
#  -DUSE_BOMB	bomb mode will auto-logout, does not come up in random mode
#  -DCLOSEDOWN_LOGOUT	use with AUTO_LOGOUT and LOGOUT_BUTTON if using xdm
#  -DLO_BUTTON_TIME=5	minutes until logout button appears
#  -DSTAFF_FILE=\"/etc/xlock.staff\"	file of staff who are exempt from above

COPT		= -O

LDOPT		= -Wl,-B,immediate

DEFINES		= -DUSE_VROOT -DALWAYS_ALLOW_ROOT\
	$(XPMDEF) $(DTSAVERDEF) $(SOUNDDEF) $(HACKDEF)\
	$(PASSWDDEF)
#	-DDEF_FILESEARCHPATH=\"$(LIBDIR)/%T/%N%S\"\
# -DSYSLOG -DMULTIPLE_ROOT\
# -DDEF_PLAY=\"$(DEF_PLAY)\"\
#	-DUSE_XLOCKRC\
#	-DAUTO_LOGOUT -DLOGOUT_BUTTON -DLO_BUTTON_TIME=5\
#	-DSTAFF_FILE=\"/etc/xlock.staff\"

INCLUDES	= $(XINC) -I. -I$(VPATH)\
	$(XPMINC) $(DTSAVERINC) $(SOUNDINC) $(PASSWDINC)

CFLAGS		= $(COPT) $(DEFINES) $(INCLUDES) -DSYSV -D__hpux

LIBS		= $(XLIBPATH) -lXhp11 -lX11 $(XPMLIB) $(DTSAVERLIB)\
	$(SOUNDLIB) -lm $(CRYPTLIB) $(PASSWDLIB)
LIB3		= $(XMLIB) $(XLIBPATH) $(EDITRESLIB) -lXt -lX11

PROGRAM	= xlock

HDRS		= xlock.h mode.h vroot.h ras.h

SRCS		= xlock.c passwd.c resource.c\
	utils.c logout.c mode.c ras.c xbm.c color.c sound.c\
	ant.c ball.c bat.c blot.c bouboule.c bounce.c braid.c bug.c\
	cartoon.c clock.c daisy.c dclock.c demon.c eyes.c\
	flag.c flame.c flamen.c forest.c galaxy.c geometry.c grav.c\
	helix.c hop.c hyper.c image.c julia.c kaleid.c\
	laser.c life.c life1d.c life3d.c lightning.c lissie.c loop.c\
	marquee.c maze.c mountain.c nose.c\
	pacman.c penrose.c petal.c puzzle.c pyro.c qix.c roll.c rotor.c\
	shape.c slip.c sphere.c spiral.c spline.c star.c swarm.c swirl.c\
	tri.c triangle.c turtle.c wator.c wire.c world.c worm.c\
	blank.c bomb.c random.c

BITMAPS		= eyes.xbm image.xbm life.xbm life1d.xbm maze.xbm puzzle.xbm\
	ghost.xbm
PIXMAPS		= image.xpm puzzle.xpm

OBJS		=$(SRCS:.c=.o)

PROGRAM3	= xmlock

SRC3		=  option.c xmlock.c
OBJ3		=$(SRC3:.c=.o)

VER             = $(PROGRAM)more

all:	all1 all3

all1:	$(OBJS)
	$(CC) $(COPT) -o $(PROGRAM) $(OBJS) $(LIBS)

all3:	$(OBJ3)
	$(CC) $(COPT) -o $(PROGRAM3) $(OBJ3) $(LIB3)

debug:	xlock
#debug:=COPT=-g -DDEBUG

#resource.o:=DEFINES=-DDEF_FILESEARCHPATH=\"$(LIBDIR)/%T/%N%S\"

flag.c:	flag.h
eyes.c:	eyes.xbm
life.c:	life.xbm
life1d.c:	life1d.xbm
maze.c:	maze.xbm
pacman.c: ghost.xbm

# change for XPM
image.c:	image.xbm
puzzle.c:	puzzle.xbm
#image.c:	image.xbm image.xpm
#puzzle.c:	puzzle.xbm puzzle.xpm

flag.h:
	rm -f flag.h
	ln -s $(FLAGDIR)/flag-$(FLAGBITS).h flag.h
 
eyes.xbm:
	rm -f eyes.xbm
	ln -s $(BITMAPDIR)/$(EYESBITMAP).xbm eyes.xbm

image.xbm:
	rm -f image.xbm
	ln -s $(BITMAPDIR)/$(IMAGEBITMAP).xbm image.xbm

life.xbm:
	rm -f life.xbm
	ln -s $(BITMAPDIR)/$(LIFEBITMAP).xbm life.xbm

life1d.xbm:
	rm -f life1d.xbm
	ln -s $(BITMAPDIR)/$(LIFE1DBITMAP).xbm life1d.xbm

maze.xbm:
	rm -f maze.xbm
	ln -s $(BITMAPDIR)/$(MAZEBITMAP).xbm maze.xbm

ghost.xbm:
	rm -f ghost.xbm
	ln -s $(BITMAPDIR)/$(PACMANBITMAP).xbm ghost.xbm

puzzle.xbm:
	rm -f puzzle.xbm
	ln -s $(BITMAPDIR)/$(IMAGEBITMAP).xbm puzzle.xbm

image.xpm:
	rm -f image.xpm
	ln -s $(PIXMAPDIR)/$(IMAGEPIXMAP).xpm image.xpm

puzzle.xpm:
	rm -f puzzle.xpm
	ln -s $(PIXMAPDIR)/$(PUZZLEPIXMAP).xpm puzzle.xpm

tar:	clean.all
	cd .. ; tar cvf $(VER).tar $(VER)/*

compress:	tar
	cd .. ; compress -f $(VER).tar

gzip:	tar
	cd .. ; gzip -f $(VER).tar

tgz:	tar
	cd .. ; gzip -c $(VER).tar > `echo $(VER) | cut -c1-8`.tgz ;\
		rm -f $(VER).tar

man:
	nroff -man $(VPATH)/$(PROGRAM).man | more

read:
	more README

lint:
	$(LINT) -ax -DLINT $(DEFINES) $(INCLUDES) $(SRCS)
	$(LINT) -ax -DLINT $(DEFINES) $(INCLUDES) $(SRC3)

clean:
	rm -f *.o $(PROGRAM) $(PROGRAM3) core *~ *% *.bak make.log MakeOut\
		flag.h $(BITMAPS) $(PIXMAPS)

clean.all:	clean
	rm -f Makefile

install:	$(PROGRAM)
	install $(PROGRAM) /usr/local/bin
